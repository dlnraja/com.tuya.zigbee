#!/usr/bin/env node
'use strict';

const fs = require('fs');
const path = require('path');

console.log('ðŸ”§ SUPPRESSION DES ANCIENS FLOW CARDS BUTTON (DEBUG)...\n');

const appJsonPath = path.join(__dirname, '..', 'app.json');
console.log(`ðŸ“‚ Fichier: ${appJsonPath}`);
console.log(`ðŸ“Š Taille avant: ${fs.statSync(appJsonPath).size} bytes`);

const appJson = JSON.parse(fs.readFileSync(appJsonPath, 'utf8'));
console.log(`ðŸ“Š Triggers avant: ${appJson.flow.triggers.length}`);

// Anciens prÃ©fixes de drivers qui n'existent plus
const OLD_DRIVER_PREFIXES = [
  'button_1gang_',
  'button_2gang_',
  'button_3gang_',
  'button_4gang_',
  'button_6gang_',
  'button_8gang_'
];

let removedCount = 0;

// Fonction pour vÃ©rifier si un flow card est obsolÃ¨te
function isObsolete(id) {
  return OLD_DRIVER_PREFIXES.some(prefix => id.startsWith(prefix));
}

// Supprimer des triggers
if (appJson.flow && appJson.flow.triggers) {
  const originalLength = appJson.flow.triggers.length;
  appJson.flow.triggers = appJson.flow.triggers.filter(trigger => {
    if (isObsolete(trigger.id)) {
      removedCount++;
      return false;
    }
    return true;
  });
  console.log(`\nâœ… Triggers: ${originalLength} â†’ ${appJson.flow.triggers.length} (supprimÃ©: ${originalLength - appJson.flow.triggers.length})`);
}

// Supprimer des conditions
if (appJson.flow && appJson.flow.conditions) {
  const originalLength = appJson.flow.conditions.length;
  appJson.flow.conditions = appJson.flow.conditions.filter(condition => {
    if (isObsolete(condition.id)) {
      removedCount++;
      return false;
    }
    return true;
  });
  console.log(`âœ… Conditions: ${originalLength} â†’ ${appJson.flow.conditions.length} (supprimÃ©: ${originalLength - appJson.flow.conditions.length})`);
}

// Supprimer des actions
if (appJson.flow && appJson.flow.actions) {
  const originalLength = appJson.flow.actions.length;
  appJson.flow.actions = appJson.flow.actions.filter(action => {
    if (isObsolete(action.id)) {
      removedCount++;
      return false;
    }
    return true;
  });
  console.log(`âœ… Actions: ${originalLength} â†’ ${appJson.flow.actions.length} (supprimÃ©: ${originalLength - appJson.flow.actions.length})`);
}

console.log(`\nðŸ“Š Total flow cards obsolÃ¨tes trouvÃ©s: ${removedCount}`);

if (removedCount > 0) {
  // Sauvegarder
  const newContent = JSON.stringify(appJson, null, 2);
  console.log(`\nðŸ’¾ Ã‰criture du fichier...`);
  fs.writeFileSync(appJsonPath, newContent, 'utf8');
  console.log(`âœ… Fichier sauvegardÃ©!`);
  console.log(`ðŸ“Š Taille aprÃ¨s: ${fs.statSync(appJsonPath).size} bytes`);
  console.log(`\nâœ… ${removedCount} FLOW CARDS OBSOLÃˆTES SUPPRIMÃ‰S!`);
} else {
  console.log(`\nâœ… AUCUN FLOW CARD OBSOLÃˆTE TROUVÃ‰!`);
}
