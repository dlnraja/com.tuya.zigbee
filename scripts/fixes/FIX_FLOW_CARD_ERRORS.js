#!/usr/bin/env node
/**
 * üîß FIX FLOW CARD ERRORS
 * 
 * Corrige les erreurs "Invalid Flow Card ID" dans les drivers
 * Les flow cards sont auto-g√©n√©r√©es par homey app build
 * Les drivers ne doivent PAS les enregistrer manuellement!
 */

const fs = require('fs');
const path = require('path');

const ROOT = process.cwd();
const DRIVERS_DIR = path.join(ROOT, 'drivers');

console.log('üîß FIX FLOW CARD ERRORS\n');

const DRIVERS_TO_FIX = [
  'button_wireless_4',
  'button_wireless_6',
  'button_wireless_8',
  'usb_outlet_1gang',
  'usb_outlet_2port',
  'usb_outlet_3gang'
];

let fixed = 0;

for (const driver of DRIVERS_TO_FIX) {
  const driverPath = path.join(DRIVERS_DIR, driver, 'driver.js');
  
  if (!fs.existsSync(driverPath)) {
    console.log(`  ‚ö†Ô∏è  ${driver}: driver.js not found`);
    continue;
  }
  
  let content = fs.readFileSync(driverPath, 'utf8');
  
  // Check if it has the problematic code
  if (content.includes('registerUniversalFlowCards') || content.includes('registerFlowCards')) {
    // Replace with a simple initialization
    const newContent = `'use strict';

const { ZigBeeDriver } = require('homey-zigbeedriver');

class ${driver.split('_').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join('')}Driver extends ZigBeeDriver {

  async onInit() {
    this.log('${driver.split('_').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join('')}Driver initialized');
    
    // Flow cards are auto-generated by homey app build
    // No manual registration needed
  }
}

module.exports = ${driver.split('_').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join('')}Driver;
`;
    
    fs.writeFileSync(driverPath, newContent, 'utf8');
    console.log(`  ‚úÖ ${driver}: Fixed`);
    fixed++;
  } else {
    console.log(`  ‚ÑπÔ∏è  ${driver}: Already clean`);
  }
}

console.log(`\n‚úÖ ${fixed} drivers fixed\n`);
