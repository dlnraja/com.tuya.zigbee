name: Homey App Publish (Enhanced with Size Checks)

on:
  push:
    branches: [ master, main ]
    paths:
      - 'app.json'
      - 'drivers/**'
      - 'lib/**'
      - 'assets/**'
      - 'locales/**'
      - '.github/workflows/homey-publish-enhanced.yml'
  workflow_dispatch:

jobs:
  # ============================================================================
  # PRE-FLIGHT: Size Checks & Validation
  # ============================================================================
  preflight:
    name: Pre-flight Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install --production
      
      - name: Check huge files
        id: check_size
        run: |
          echo "üîç Checking for huge files..."
          node scripts/git/CHECK_HUGE_FILES.js || echo "size_warning=true" >> $GITHUB_OUTPUT
      
      - name: Validate app.json exists
        run: |
          if [ ! -f "app.json" ]; then
            echo "‚ùå app.json not found!"
            echo "üí° .homeycompose/ is gitignored, ensure app.json is committed"
            exit 1
          fi
          echo "‚úÖ app.json found"
      
      - name: Check app.json size
        run: |
          SIZE=$(stat -f%z app.json 2>/dev/null || stat -c%s app.json 2>/dev/null)
          SIZE_MB=$((SIZE / 1024 / 1024))
          echo "üìä app.json size: ${SIZE_MB} MB"
          
          if [ $SIZE_MB -gt 50 ]; then
            echo "‚ö†Ô∏è  WARNING: app.json is very large (${SIZE_MB} MB)"
            echo "Consider optimizing driver definitions"
          fi
      
      - name: Homey CLI validate (publish level)
        run: |
          npm install -g homey
          homey app validate --level publish
  
  # ============================================================================
  # BUILD: Ensure app is buildable
  # ============================================================================
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: preflight
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Test build
        run: |
          npm install -g homey
          homey app build --production
          
          if [ -d ".homeybuild" ]; then
            BUILD_SIZE=$(du -sh .homeybuild | cut -f1)
            echo "‚úÖ Build successful"
            echo "üì¶ Build size: $BUILD_SIZE"
          else
            echo "‚ùå Build failed: .homeybuild not created"
            exit 1
          fi
  
  # ============================================================================
  # PUBLISH: Automatic publication to Homey App Store
  # ============================================================================
  publish:
    name: Publish to Homey App Store
    runs-on: ubuntu-latest
    needs: [preflight, build]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm install
          npm install -g homey
      
      - name: Get version from app.json
        id: version
        run: |
          VERSION=$(node -p "require('./app.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Version: $VERSION"
      
      - name: Check if version already published
        id: check_published
        run: |
          # Try to get published versions (if API available)
          echo "Checking if v${{ steps.version.outputs.version }} is already published..."
          # This is a placeholder - adjust based on Homey API availability
          echo "published=false" >> $GITHUB_OUTPUT
      
      - name: Publish to Homey App Store
        if: steps.check_published.outputs.published == 'false'
        env:
          HOMEY_TOKEN: ${{ secrets.HOMEY_TOKEN }}
        run: |
          echo "üöÄ Publishing v${{ steps.version.outputs.version }} to Homey App Store..."
          
          # Login with token
          echo "$HOMEY_TOKEN" | homey login --token
          
          # Publish (with automatic changelog generation)
          homey app publish <<EOF || echo "publish_failed=true" >> $GITHUB_OUTPUT
          
          EOF
          
          if [ -f "$GITHUB_OUTPUT" ] && grep -q "publish_failed=true" "$GITHUB_OUTPUT"; then
            echo "‚ùå Publish failed"
            exit 1
          else
            echo "‚úÖ Publish successful!"
          fi
      
      - name: Create GitHub Release
        if: success()
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            Auto-published version ${{ steps.version.outputs.version }}
            
            See CHANGELOG.md for details.
            
            **Note:** .homeycompose/ is gitignored to:
            - Avoid cache issues
            - Reduce repo size
            - Prevent merge conflicts
            
            Only app.json is committed (generated from .homeycompose/)
          draft: false
          prerelease: false
  
  # ============================================================================
  # NOTIFY: Report results
  # ============================================================================
  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [preflight, build, publish]
    if: always()
    
    steps:
      - name: Report status
        run: |
          echo "=================================="
          echo "WORKFLOW SUMMARY"
          echo "=================================="
          echo ""
          echo "Preflight: ${{ needs.preflight.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Publish: ${{ needs.publish.result }}"
          echo ""
          
          if [ "${{ needs.publish.result }}" == "success" ]; then
            echo "‚úÖ ALL CHECKS PASSED - APP PUBLISHED"
          else
            echo "‚ùå WORKFLOW FAILED - CHECK LOGS"
          fi
