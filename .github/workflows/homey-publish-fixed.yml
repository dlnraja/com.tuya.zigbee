name: Homey Publication (Fixed)

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: |
        echo "📦 Installing app dependencies..."
        npm ci --no-audit --no-fund || npm install --no-audit --no-fund
        
    - name: Install Homey CLI
      run: |
        echo "🔍 Installing Homey CLI globally..."
        npm install -g homey@latest --no-audit --no-fund
        homey --version
        
    - name: Clean Build Cache
      run: |
        echo "🧹 Cleaning cache..."
        rm -rf .homeybuild .homeycompose node_modules/.cache || true
        
    - name: Configure Homey Authentication
      env:
        HOMEY_TOKEN: ${{ secrets.HOMEY_TOKEN }}
      run: |
        echo "🔐 Configuring Homey authentication..."
        if [ -z "$HOMEY_TOKEN" ]; then
          echo "❌ ERROR: HOMEY_TOKEN secret is not configured!"
          echo "ℹ️  Please add HOMEY_TOKEN to repository secrets"
          echo "ℹ️  Get your token from: https://tools.developer.homey.app/"
          exit 1
        fi
        mkdir -p ~/.homey
        echo "{\"token\":\"$HOMEY_TOKEN\"}" > ~/.homey/.homeyrc.json
        echo "✅ Authentication configured"
        homey whoami || (echo "⚠️ Token validation warning - continuing..." && exit 0)
        
    - name: Build App
      run: |
        echo "🔨 Building Homey app..."
        homey app build
        
    - name: Validate App (Publish Level)
      run: |
        echo "✅ Validating app at publish level..."
        homey app validate --level=publish
        
    - name: Extract Current Version
      id: version
      run: |
        CURRENT_VERSION=$(node -p "require('./app.json').version")
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "📊 Current version: $CURRENT_VERSION"
        
    - name: Publish to Homey App Store
      id: publish
      env:
        HOMEY_TOKEN: ${{ secrets.HOMEY_TOKEN }}
      run: |
        echo "🚀 Publishing to Homey App Store..."
        echo "Version: ${{ steps.version.outputs.version }}"
        
        # Configure Git for commits
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Create expect script for automation
        cat > publish.exp << 'EOF'
        #!/usr/bin/expect -f
        set timeout 60
        
        spawn homey app publish
        
        expect {
          "uncommitted changes" {
            send "y\r"
            exp_continue
          }
          "update your app's version number" {
            send "y\r"
            exp_continue
          }
          "Select the desired version number" {
            send "\r"
            exp_continue
          }
          "What's new in" {
            send "Fix: Settings infinite loop + homey-zigbeedriver dependency + 28 flow cards\r"
            exp_continue
          }
          "Do you want to commit" {
            send "y\r"
            exp_continue
          }
          "Do you want to push" {
            send "y\r"
            exp_continue
          }
          eof
        }
        EOF
        
        chmod +x publish.exp
        
        # Install expect
        sudo apt-get update -qq
        sudo apt-get install -y expect
        
        # Run expect script
        ./publish.exp || {
          echo "⚠️ Expect script failed, trying direct method..."
          echo -e "y\ny\n\nFix: Settings infinite loop + homey-zigbeedriver dependency + 28 flow cards\ny\ny" | homey app publish || true
        }
        
        echo "🔗 Check status: https://tools.developer.homey.app/apps/app/com.dlnraja.tuya.zigbee"
        
    - name: Create GitHub Release Tag
      if: success()
      run: |
        echo "🏷️ Creating release tag..."
        VERSION="${{ steps.version.outputs.version }}"
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a "v$VERSION" -m "Release v$VERSION - Auto-published via GitHub Actions" || echo "Tag already exists"
        git push origin "v$VERSION" || echo "Tag push failed (may already exist)"
        
    - name: Summary
      if: always()
      run: |
        echo "## 📊 Publication Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**App ID:** com.dlnraja.tuya.zigbee" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 [View on Homey Developer Tools](https://tools.developer.homey.app/apps/app/com.dlnraja.tuya.zigbee)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ **Publication completed successfully!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Publication may require manual intervention**" >> $GITHUB_STEP_SUMMARY
          echo "Please check the logs above for details" >> $GITHUB_STEP_SUMMARY
        fi
