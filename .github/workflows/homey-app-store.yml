name: Homey App Store Auto-Publish with Draft→Test Promotion

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Validate Homey App
        uses: athombv/github-action-homey-app-validate@master
        with:
          level: publish
      
      - name: Generate User-Friendly Changelog
        id: changelog
        run: |
          # Get last commit message
          LAST_COMMIT=$(git log -1 --pretty=format:"%s")
          
          # Convert technical commit to user-friendly message
          if echo "$LAST_COMMIT" | grep -iE "^feat"; then
            CHANGELOG="New features and improvements"
          elif echo "$LAST_COMMIT" | grep -iE "^fix"; then
            CHANGELOG="Bug fixes and stability improvements"
          elif echo "$LAST_COMMIT" | grep -iE "device|manufacturer|id"; then
            CHANGELOG="Added support for new devices and improved compatibility"
          elif echo "$LAST_COMMIT" | grep -iE "image|visual"; then
            CHANGELOG="Updated device icons and visual improvements"
          elif echo "$LAST_COMMIT" | grep -iE "workflow|action"; then
            CHANGELOG="System improvements and optimizations"
          else
            CHANGELOG="Performance and stability improvements"
          fi
          
          # Sanitize special characters (max 400 chars for Homey)
          CHANGELOG=$(echo "$CHANGELOG" | tr -d '\r\n' | head -c 400)
          
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
          echo "Generated changelog: $CHANGELOG"
      
      - name: Auto-Increment Version
        uses: athombv/github-action-homey-app-version@master
        id: version
        with:
          version: patch
          changelog: ${{ steps.changelog.outputs.changelog }}
      
      - name: Commit Version Bump
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: bump version to v${{ steps.version.outputs.version }} [skip ci]"
            git push origin HEAD
            echo "✅ Version bumped to ${{ steps.version.outputs.version }}"
          else
            echo "ℹ️ No version changes"
          fi
        
      - name: Publish Homey App
        uses: athombv/github-action-homey-app-publish@master
        id: publish
        with:
          personal_access_token: ${{ secrets.HOMEY_PAT }}
      
      - name: Extract Build ID from URL
        id: extract_build
        run: |
          # Get URL from publish action output
          URL="${{ steps.publish.outputs.url }}"
          echo "📋 Publish URL: $URL"
          
          # Try to extract Build ID from URL (format: .../build/XX)
          BUILD_ID=$(echo "$URL" | grep -oP 'build/\K[0-9]+' || echo "")
          
          # If not found in URL, use API to get latest build
          if [ -z "$BUILD_ID" ]; then
            echo "⚠️ Could not extract from URL, trying API..."
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.HOMEY_PAT }}" \
              "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/builds")
            BUILD_ID=$(echo "$RESPONSE" | jq -r '.[0].id // empty' 2>/dev/null || echo "")
          fi
          
          if [ -n "$BUILD_ID" ]; then
            echo "BUILD_ID=$BUILD_ID" >> $GITHUB_OUTPUT
            echo "✅ Build ID: $BUILD_ID"
          else
            echo "⚠️ Could not extract Build ID"
            echo "BUILD_ID=" >> $GITHUB_OUTPUT
          fi
          
      - name: Auto-promote Draft to Test
        if: steps.extract_build.outputs.BUILD_ID != ''
        env:
          HOMEY_PAT: ${{ secrets.HOMEY_PAT }}
        run: |
          BUILD_ID="${{ steps.extract_build.outputs.BUILD_ID }}"
          echo "🚀 Promoting Build #$BUILD_ID from Draft to Test..."
          echo ""
          
          # Wait 3 seconds for build to be ready
          echo "⏳ Waiting 3 seconds for build to be ready..."
          sleep 3
          
          # Use Homey API to promote build
          echo "📡 API Call: POST /build/$BUILD_ID/promote"
          RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
            -H "Authorization: Bearer $HOMEY_PAT" \
            -H "Content-Type: application/json" \
            "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/build/$BUILD_ID/promote" \
            -d '{"target": "test"}')
          
          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | sed '$d')
          
          echo ""
          echo "HTTP Status: $HTTP_CODE"
          echo "Response Body: $BODY"
          echo ""
          
          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 201 ]; then
            echo "✅ Build #$BUILD_ID promoted to Test successfully!"
            echo ""
            echo "🔗 Test URL: https://homey.app/a/com.dlnraja.tuya.zigbee/test/"
          elif [ "$HTTP_CODE" -eq 401 ]; then
            echo "❌ Authentication failed - HOMEY_PAT may be invalid"
            echo "   Get new token: https://tools.developer.homey.app/me"
            exit 1
          elif [ "$HTTP_CODE" -eq 404 ]; then
            echo "❌ Build #$BUILD_ID not found"
            exit 1
          else
            echo "⚠️  Promotion failed (status $HTTP_CODE)"
            echo "   Manual promotion required:"
            echo "   https://tools.developer.homey.app/apps/app/com.dlnraja.tuya.zigbee/build/$BUILD_ID"
            exit 1
          fi
          
      - name: Summary
        run: |
          echo "## 📊 Publication Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Build ID:** ${{ steps.extract_build.outputs.BUILD_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** Test (auto-promoted)" >> $GITHUB_STEP_SUMMARY
          echo "- **Management URL:** ${{ steps.publish.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Install URL:** https://homey.app/a/com.dlnraja.tuya.zigbee/test/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Verify build in [Dashboard](${{ steps.publish.outputs.url }})" >> $GITHUB_STEP_SUMMARY
          echo "2. Test installation from [Test URL](https://homey.app/a/com.dlnraja.tuya.zigbee/test/)" >> $GITHUB_STEP_SUMMARY
          echo "3. When ready, promote to Live from dashboard" >> $GITHUB_STEP_SUMMARY
