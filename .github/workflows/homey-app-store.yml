name: Homey App Store Auto-Publish with Draft→Test Promotion

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Validate Homey App
        uses: athombv/github-action-homey-app-validate@master
        with:
          level: publish
      
      - name: Generate User-Friendly Changelog
        id: changelog
        run: |
          # Get last commit message
          LAST_COMMIT=$(git log -1 --pretty=format:"%s")
          
          # Convert technical commit to user-friendly message
          if echo "$LAST_COMMIT" | grep -iE "^feat"; then
            CHANGELOG="New features and improvements"
          elif echo "$LAST_COMMIT" | grep -iE "^fix"; then
            CHANGELOG="Bug fixes and stability improvements"
          elif echo "$LAST_COMMIT" | grep -iE "device|manufacturer|id"; then
            CHANGELOG="Added support for new devices and improved compatibility"
          elif echo "$LAST_COMMIT" | grep -iE "image|visual"; then
            CHANGELOG="Updated device icons and visual improvements"
          elif echo "$LAST_COMMIT" | grep -iE "workflow|action"; then
            CHANGELOG="System improvements and optimizations"
          else
            CHANGELOG="Performance and stability improvements"
          fi
          
          # Sanitize special characters (max 400 chars for Homey)
          CHANGELOG=$(echo "$CHANGELOG" | tr -d '\r\n' | head -c 400)
          
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
          echo "Generated changelog: $CHANGELOG"
      
      - name: Auto-Increment Version
        uses: athombv/github-action-homey-app-version@master
        id: version
        with:
          version: patch
          changelog: ${{ steps.changelog.outputs.changelog }}
      
      - name: Commit Version Bump
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: bump version to v${{ steps.version.outputs.version }} [skip ci]"
            git push origin HEAD
            echo "✅ Version bumped to ${{ steps.version.outputs.version }}"
          else
            echo "ℹ️ No version changes"
          fi
        
      - name: Publish Homey App
        uses: athombv/github-action-homey-app-publish@master
        id: publish
        with:
          personal_access_token: ${{ secrets.HOMEY_PAT }}
      
      - name: Extract Build ID and Auto-Promote to Test
        id: promote
        continue-on-error: true
        shell: bash
        run: |
          set +e
          
          BUILD_ID=""
          
          # METHOD 1: Extract Build ID from publish action URL output
          echo "🔍 Method 1: Extracting Build ID from URL..."
          PUBLISH_URL="${{ steps.publish.outputs.url }}"
          if [ ! -z "$PUBLISH_URL" ]; then
            BUILD_ID=$(echo "$PUBLISH_URL" | grep -oP 'build/\K[0-9]+' || echo "")
            if [ ! -z "$BUILD_ID" ]; then
              echo "✅ Build ID extracted from URL: $BUILD_ID"
            fi
          fi
          
          # METHOD 2: If URL extraction failed, query API after waiting
          if [ -z "$BUILD_ID" ]; then
            echo "🔍 Method 2: Fetching from API..."
            sleep 8
            
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.HOMEY_PAT }}" \
              "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/builds" 2>/dev/null || echo "")
            
            if [ ! -z "$RESPONSE" ]; then
              BUILD_ID=$(echo "$RESPONSE" | grep -o '"id":[0-9]*' 2>/dev/null | head -1 | grep -o '[0-9]*' 2>/dev/null || echo "")
              if [ ! -z "$BUILD_ID" ]; then
                echo "✅ Build ID extracted from API: $BUILD_ID"
              fi
            fi
          fi
          
          # METHOD 3: Last resort - try parsing JSON properly with jq
          if [ -z "$BUILD_ID" ] && command -v jq &> /dev/null; then
            echo "🔍 Method 3: Using jq parser..."
            sleep 3
            
            RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.HOMEY_PAT }}" \
              "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/builds" 2>/dev/null || echo "")
            
            if [ ! -z "$RESPONSE" ]; then
              BUILD_ID=$(echo "$RESPONSE" | jq -r '.[0].id // empty' 2>/dev/null || echo "")
              if [ ! -z "$BUILD_ID" ]; then
                echo "✅ Build ID extracted with jq: $BUILD_ID"
              fi
            fi
          fi
          
          # PROMOTION: If we have a Build ID, promote it automatically
          if [ ! -z "$BUILD_ID" ] && [ "$BUILD_ID" -gt 0 ] 2>/dev/null; then
            echo "BUILD_ID=$BUILD_ID" >> $GITHUB_OUTPUT
            
            echo "🚀 Auto-promoting Build #$BUILD_ID to Test channel..."
            PROMO_RESPONSE=$(curl -s -X POST \
              -H "Authorization: Bearer ${{ secrets.HOMEY_PAT }}" \
              -H "Content-Type: application/json" \
              -w "\n%{http_code}" \
              "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/build/$BUILD_ID/promote" \
              -d '{"target": "test"}' 2>/dev/null || echo "")
            
            HTTP_CODE=$(echo "$PROMO_RESPONSE" | tail -n1 2>/dev/null || echo "0")
            
            if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
              echo "✅ Build #$BUILD_ID promoted to TEST successfully!"
              echo "🔗 Test URL: https://homey.app/a/com.dlnraja.tuya.zigbee/test/"
              echo "PROMOTED=true" >> $GITHUB_OUTPUT
            else
              echo "⚠️ Promotion returned HTTP $HTTP_CODE"
              echo "Response: $PROMO_RESPONSE"
              echo "PROMOTED=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "BUILD_ID=" >> $GITHUB_OUTPUT
            echo "PROMOTED=false" >> $GITHUB_OUTPUT
            echo "❌ All extraction methods failed"
            echo "💡 Manual promotion needed: https://tools.developer.homey.app/apps/app/com.dlnraja.tuya.zigbee"
          fi
          
          exit 0
      
      - name: Summary
        run: |
          echo "## 📊 Publication Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build ID:** ${{ steps.promote.outputs.BUILD_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Auto-Promoted:** ${{ steps.promote.outputs.PROMOTED }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Management URL:** ${{ steps.publish.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- **Dashboard:** https://tools.developer.homey.app/apps/app/com.dlnraja.tuya.zigbee" >> $GITHUB_STEP_SUMMARY
          echo "- **Test URL:** https://homey.app/a/com.dlnraja.tuya.zigbee/test/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Next Steps" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.promote.outputs.PROMOTED }}" = "true" ]; then
            echo "1. ✅ Build automatically promoted to Test" >> $GITHUB_STEP_SUMMARY
            echo "2. Test the app from the Test URL above" >> $GITHUB_STEP_SUMMARY
            echo "3. When ready, promote to Live from dashboard" >> $GITHUB_STEP_SUMMARY
          else
            echo "1. Go to [Dashboard](${{ steps.publish.outputs.url }})" >> $GITHUB_STEP_SUMMARY
            echo "2. Manually promote Build #${{ steps.promote.outputs.BUILD_ID }} to Test" >> $GITHUB_STEP_SUMMARY
            echo "3. Test and then promote to Live when ready" >> $GITHUB_STEP_SUMMARY
          fi
