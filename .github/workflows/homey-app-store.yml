name: Homey App Store Auto-Publish with Draft→Test Promotion

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Validate Homey App
        uses: athombv/github-action-homey-app-validate@master
        with:
          level: publish
      
      - name: Generate User-Friendly Changelog
        id: changelog
        run: |
          # Get last commit message
          LAST_COMMIT=$(git log -1 --pretty=format:"%s")
          
          # Convert technical commit to user-friendly message
          if echo "$LAST_COMMIT" | grep -iE "^feat"; then
            CHANGELOG="New features and improvements"
          elif echo "$LAST_COMMIT" | grep -iE "^fix"; then
            CHANGELOG="Bug fixes and stability improvements"
          elif echo "$LAST_COMMIT" | grep -iE "device|manufacturer|id"; then
            CHANGELOG="Added support for new devices and improved compatibility"
          elif echo "$LAST_COMMIT" | grep -iE "image|visual"; then
            CHANGELOG="Updated device icons and visual improvements"
          elif echo "$LAST_COMMIT" | grep -iE "workflow|action"; then
            CHANGELOG="System improvements and optimizations"
          else
            CHANGELOG="Performance and stability improvements"
          fi
          
          # Sanitize special characters (max 400 chars for Homey)
          CHANGELOG=$(echo "$CHANGELOG" | tr -d '\r\n' | head -c 400)
          
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
          echo "Generated changelog: $CHANGELOG"
      
      - name: Auto-Increment Version
        uses: athombv/github-action-homey-app-version@master
        id: version
        with:
          version: patch
          changelog: ${{ steps.changelog.outputs.changelog }}
      
      - name: Commit Version Bump
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: bump version to v${{ steps.version.outputs.version }} [skip ci]"
            git push origin HEAD
            echo "✅ Version bumped to ${{ steps.version.outputs.version }}"
          else
            echo "ℹ️ No version changes"
          fi
        
      - name: Publish Homey App and Extract Build ID
        uses: athombv/github-action-homey-app-publish@master
        id: publish
        with:
          personal_access_token: ${{ secrets.HOMEY_PAT }}
      
      - name: Get Build ID and Auto-Promote
        id: extract_build
        continue-on-error: true
        shell: bash
        run: |
          set +e  # Don't exit on error
          
          echo "📋 Getting latest build from Homey API..."
          
          # Wait 5 seconds for build to be fully registered
          sleep 5
          
          # Try to get all builds with safe error handling
          RESPONSE=""
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.HOMEY_PAT }}" \
            "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/builds" 2>/dev/null)
          
          # Extract first build ID (most recent) with safe handling
          BUILD_ID=""
          if [ ! -z "$RESPONSE" ]; then
            BUILD_ID=$(echo "$RESPONSE" | grep -o '"id":[0-9]*' 2>/dev/null | head -1 | grep -o '[0-9]*' 2>/dev/null)
          fi
          
          # Check if we got a valid build ID
          if [ ! -z "$BUILD_ID" ] && [ "$BUILD_ID" -gt 0 ] 2>/dev/null; then
            echo "BUILD_ID=$BUILD_ID" >> $GITHUB_OUTPUT || true
            echo "✅ Build ID: $BUILD_ID"
            
            # Auto-promote immediately
            echo "🚀 Auto-promoting Build #$BUILD_ID to Test..."
            PROMO_RESPONSE=$(curl -s -X POST \
              -H "Authorization: Bearer ${{ secrets.HOMEY_PAT }}" \
              -H "Content-Type: application/json" \
              -w "\n%{http_code}" \
              "https://api.developer.homey.app/app/com.dlnraja.tuya.zigbee/build/$BUILD_ID/promote" \
              -d '{"target": "test"}' 2>/dev/null)
            
            HTTP_CODE=$(echo "$PROMO_RESPONSE" | tail -n1 2>/dev/null)
            
            if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
              echo "✅ Build #$BUILD_ID promoted to TEST successfully!"
              echo "🔗 Test URL: https://homey.app/a/com.dlnraja.tuya.zigbee/test/"
            else
              echo "⚠️  Promotion status: $HTTP_CODE (manual promotion may be needed)"
            fi
          else
            echo "BUILD_ID=" >> $GITHUB_OUTPUT || true
            echo "⚠️ Could not extract Build ID from API"
            echo "💡 Manual check: https://tools.developer.homey.app/apps/app/com.dlnraja.tuya.zigbee"
          fi
          
          # Always succeed
          exit 0
          
      - name: Summary
        run: |
          echo "## 📊 Publication Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Build ID:** ${{ steps.extract_build.outputs.BUILD_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** Test (auto-promoted)" >> $GITHUB_STEP_SUMMARY
          echo "- **Management URL:** ${{ steps.publish.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Test Install URL:** https://homey.app/a/com.dlnraja.tuya.zigbee/test/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Verify build in [Dashboard](${{ steps.publish.outputs.url }})" >> $GITHUB_STEP_SUMMARY
          echo "2. Test installation from [Test URL](https://homey.app/a/com.dlnraja.tuya.zigbee/test/)" >> $GITHUB_STEP_SUMMARY
          echo "3. When ready, promote to Live from dashboard" >> $GITHUB_STEP_SUMMARY
