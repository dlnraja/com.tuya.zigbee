# Script de vérification de l'environnement
Write-Host "=== Vérification de l'environnement ===" -ForegroundColor Green

# 1. Vérifier Node.js
try {
    $nodeVersion = node --version
    Write-Host "✅ Node.js est installé (version: $nodeVersion)" -ForegroundColor Green
} catch {
    Write-Host "❌ Node.js n'est pas installé ou n'est pas dans le PATH" -ForegroundColor Red
    exit 1
}

# 2. Vérifier npm
try {
    $npmVersion = npm --version
    Write-Host "✅ npm est installé (version: $npmVersion)" -ForegroundColor Green
} catch {
    Write-Host "❌ npm n'est pas installé ou n'est pas dans le PATH" -ForegroundColor Red
    exit 1
}

# 3. Vérifier l'accès au système de fichiers
$testFile = "test-file-$(Get-Date -Format 'yyyyMMddHHmmss').txt"
try {
    "Test d'écriture" | Out-File -FilePath $testFile -Encoding utf8
    if (Test-Path $testFile) {
        Write-Host "✅ Test d'écriture réussi" -ForegroundColor Green
        Remove-Item $testFile -Force -ErrorAction SilentlyContinue
    } else {
        Write-Host "❌ Impossible d'écrire dans le répertoire courant" -ForegroundColor Red
    }
} catch {
    Write-Host "❌ Erreur lors du test d'écriture: $_" -ForegroundColor Red
}

# 4. Vérifier les fichiers du projet
Write-Host "`n=== Fichiers du projet ===" -ForegroundColor Cyan
$requiredFiles = @("package.json", "app.json", "scripts/scout.js", "scripts/architect.js", "scripts/optimizer.js", "scripts/validator.js")
$allFilesExist = $true

foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "✅ $file trouvé" -ForegroundColor Green
    } else {
        Write-Host "❌ $file est manquant" -ForegroundColor Red
        $allFilesExist = $false
    }
}

# 5. Tester l'exécution d'un script simple
Write-Host "`n=== Test d'exécution ===" -ForegroundColor Cyan
$testScript = @"
console.log('Test d\'exécution réussi!');
console.log('Node.js version:', process.version);
console.log('Répertoire:', process.cwd());
"@

$testFile = "test-script-$(Get-Date -Format 'yyyyMMddHHmmss').js"
try {
    $testScript | Out-File -FilePath $testFile -Encoding utf8
    Write-Host "Exécution du script de test..."
    node $testFile
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "✅ Script exécuté avec succès" -ForegroundColor Green
    } else {
        Write-Host "❌ Le script a échoué avec le code $LASTEXITCODE" -ForegroundColor Red
    }
} catch {
    Write-Host "❌ Erreur lors de l'exécution du script: $_" -ForegroundColor Red
} finally {
    # Nettoyage
    if (Test-Path $testFile) { Remove-Item $testFile -Force -ErrorAction SilentlyContinue }
}

Write-Host "`n=== Vérification terminée ===" -ForegroundColor Green
Write-Host "Appuyez sur une touche pour continuer..."
$null = $Host.UI.RawUI.ReadKey('NoEcho,IncludeKeyDown')
