# Script de diagnostic de l'environnement PowerShell
Write-Host "=== Diagnostic de l'environnement ===" -ForegroundColor Green
Write-Host "`n1. Informations système:" -ForegroundColor Cyan
Write-Host "- Nom de l'ordinateur: $env:COMPUTERNAME"
Write-Host "- Utilisateur: $env:USERNAME"
Write-Host "- Répertoire courant: $(Get-Location)"

# Vérifier Node.js et npm
try {
    $nodeVersion = node --version
    $npmVersion = npm --version
    Write-Host "`n2. Node.js et npm:" -ForegroundColor Cyan
    Write-Host "- Node.js: $nodeVersion"
    Write-Host "- npm: $npmVersion"
} catch {
    Write-Host "`n❌ Node.js ou npm n'est pas installé ou n'est pas dans le PATH" -ForegroundColor Red
}

# Vérifier les fichiers du projet
Write-Host "`n3. Fichiers du projet:" -ForegroundColor Cyan
$filesToCheck = @("package.json", "app.json", "README.md", "drivers")
foreach ($file in $filesToCheck) {
    $exists = Test-Path $file
    $type = if ($exists) { (Get-Item $file).GetType().Name } else { "Non trouvé" }
    Write-Host "- $file : $($exists ? "✅ $type" : "❌ Non trouvé")
}

# Vérifier le contenu du package.json
try {
    $packageJson = Get-Content -Path "package.json" -Raw | ConvertFrom-Json
    Write-Host "`n4. Informations du package.json:" -ForegroundColor Cyan
    Write-Host "- Nom: $($packageJson.name)"
    Write-Host "- Version: $($packageJson.version)"
    Write-Host "- Scripts: $($packageJson.scripts.Count) scripts définis"
} catch {
    Write-Host "`n❌ Erreur lors de la lecture du package.json" -ForegroundColor Red
}

# Vérifier les modules npm installés
try {
    $modules = npm list --depth=0 --json
    $modulesObj = $modules | ConvertFrom-Json
    $depsCount = if ($modulesObj.dependencies) { $modulesObj.dependencies.Count } else { 0 }
    $devDepsCount = if ($modulesObj.devDependencies) { $modulesObj.devDependencies.Count } else { 0 }
    
    Write-Host "`n5. Modules npm installés:" -ForegroundColor Cyan
    Write-Host "- Dependencies: $depsCount"
    Write-Host "- Dev Dependencies: $devDepsCount"
} catch {
    Write-Host "`n⚠ Impossible de récupérer la liste des modules npm" -ForegroundColor Yellow
}

Write-Host "`n=== Fin du diagnostic ===" -ForegroundColor Green
