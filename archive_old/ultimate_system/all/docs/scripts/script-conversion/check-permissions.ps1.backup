# Script de vérification des permissions PowerShell
Write-Host "=== Vérification des permissions PowerShell ===" -ForegroundColor Green

# 1. Vérifier la politique d'exécution actuelle
$executionPolicy = Get-ExecutionPolicy
Write-Host "`n1. Politique d'exécution actuelle: $executionPolicy"

# 2. Vérifier les permissions de l'utilisateur actuel
$currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
$principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
$isAdmin = $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
Write-Host "`n2. Utilisateur actuel: $($currentUser.Name)"
Write-Host "   Exécution en tant qu'administrateur: $isAdmin"

# 3. Vérifier les permissions du répertoire
$currentDir = Get-Location
Write-Host "`n3. Vérification des permissions du répertoire: $currentDir"

try {
    $acl = Get-Acl -Path $currentDir
    $access = $acl.Access | Where-Object { $_.IdentityReference -eq $currentUser.Name }
    
    if ($access) {
        Write-Host "   Permissions pour $($currentUser.Name):"
        $access | ForEach-Object {
            Write-Host "   - $($_.FileSystemRights)"
        }
    } else {
        Write-Host "   Aucune permission spécifique trouvée pour $($currentUser.Name)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   Erreur lors de la vérification des permissions: $_" -ForegroundColor Red
}

# 4. Tester l'exécution d'une commande simple
Write-Host "`n4. Test d'exécution de commande:"
try {
    $testFile = "$env:TEMP\test_permission_$(Get-Date -Format 'yyyyMMdd_HHmmss').txt"
    "Test d'écriture: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')" | Out-File -FilePath $testFile -Encoding utf8 -Force
    
    if (Test-Path $testFile) {
        $content = Get-Content -Path $testFile -Raw
        Write-Host "   Commande exécutée avec succès!" -ForegroundColor Green
        Write-Host "   Fichier créé: $testFile"
        Write-Host "   Contenu: $($content.Trim())"
        Remove-Item -Path $testFile -Force -ErrorAction SilentlyContinue
    } else {
        Write-Host "   Échec de la création du fichier de test" -ForegroundColor Red
    }
} catch {
    Write-Host "   Erreur lors du test d'exécution: $_" -ForegroundColor Red
}

# 5. Vérifier les variables d'environnement
Write-Host "`n5. Variables d'environnement:"
Write-Host "   - NODE_PATH: $($env:NODE_PATH ?? 'Non défini')"
Write-Host "   - PATH contient Node.js: $($env:PATH -like '*node*')"

Write-Host "`n=== Fin de la vérification ===" -ForegroundColor Green
