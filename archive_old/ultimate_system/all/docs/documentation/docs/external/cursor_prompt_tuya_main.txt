### üß† CURSOR MEGA PROMPT ‚Äì Projet principal `com.tuya.zigbee`---### üí° Suggestions suppl√©mentaires √† int√©grer (analyse proactive)1. **Exclusion automatique de toute config locale** : - Ajouter dans `.gitignore` tous les chemins relatifs √† la machine de d√©veloppement (ex: `.vscode/`, `local-scripts/`, `cursor_temp*`, `*.log`, `RestoreAndRebuild.ps1`, etc.) - Ne jamais pousser de fichiers li√©s √† l‚Äôenvironnement de d√©veloppement local ou aux tests de Dylan.2. **Nettoyage r√©troactif du d√©p√¥t** : - Utiliser `git-filter-repo` pour effacer tout historique contenant : - Fichiers li√©s √† la machine locale (ex: `D:/Download/fold`, scripts de configuration, tests perso) - Scripts YOLO, logs de crash Cursor, r√©f√©rences au comportement local3. **Inclusion automatique des TODOs** : - Scanner tout le projet √† la recherche de `TODO`, `FIXME`, `NOTE:` dans tous les fichiers `.js`, `.json`, `.md`, `.txt` - Les centraliser dans un fichier `TODO_TRACKER.md` et les transformer en t√¢ches Github si pertinent4. **V√©rification syst√©matique post-commit** : - Ajouter un GitHub Action qui bloque tout push contenant : - Fichier avec mention explicite d‚Äôun chemin local - Variables personnelles (`dylan`, `D:/`, `cursor_temp`, etc.)5. **Auto-validation des drivers** : - V√©rifier que chaque fichier driver contient : - `id`, `manufacturer`, `zigbee`, `endpoints`, `modelId` - Fichier `.js` associ√© si requis par capabilities6. **Mini dashboard web local** (HTML statique, sans serveur) : - G√©n√©rer dans `/docs/` une page `index.html` avec : - Tableau dynamique de tous les drivers - M√©tadonn√©es : date ajout, cat√©gorie, fichier source, statut - Liens crois√©s entre `com.tuya.zigbee`, `tuya-light`, `tuya-light-repo`7. **Analyse & int√©gration de tous les fichiers de `D:/Download/fold/`** : - Tous les fichiers pr√©sents dans ce dossier doivent √™tre lus, analys√©s et fusionn√©s si utiles (drivers, documentations, specs) - Ne rien int√©grer sans nettoyage pr√©alable (doit passer les v√©rifications Phase 2)---### üéØ Objectif globalReconstruire, corriger, optimiser et finaliser le projet `com.tuya.zigbee` avec les objectifs suivants :- Une base **fonctionnelle, coh√©rente, compl√®te** (Homey SDK3)- Des fichiers valides, traduits, interconnect√©s intelligemment- Des commits propres, lisibles, non pollu√©s par des erreurs d‚Äôenvironnement- Des workflows GitHub enrichis, stables et coh√©rents- Un dashboard, une documentation et des drivers **√† jour et test√©s**- Un lien clair avec la version fallback `tuya-light` sans duplication inutile- Un repo miroir `tuya-light-repo` synchronis√© automatiquement- Aucune d√©pendance inutile (pas de techno farfelue, rester strictement sur **Tuya Zigbee**)- Aucune trace de la configuration locale, ni dans les fichiers, ni dans les commits, ni dans l‚Äôhistorique Git ‚úÖ... [le reste des phases reste inchang√©, d√©j√† enrichi] ...