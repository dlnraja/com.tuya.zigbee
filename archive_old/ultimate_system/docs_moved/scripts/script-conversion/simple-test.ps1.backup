# Script de test simple PowerShell
Write-Host "=== Test PowerShell ===" -ForegroundColor Green
Write-Host "Date: $(Get-Date)"
Write-Host "Répertoire: $(Get-Location)"

# Tester l'accès au système de fichiers
$testFile = "test-file-$(Get-Date -Format 'yyyyMMddHHmmss').txt"
try {
    "Test d'écriture" | Out-File -FilePath $testFile -Encoding UTF8
    if (Test-Path -Path $testFile) {
        Write-Host "✅ Test d'écriture réussi" -ForegroundColor Green
        Remove-Item -Path $testFile -Force -ErrorAction SilentlyContinue
    } else {
        Write-Host "❌ Impossible d'écrire dans le répertoire" -ForegroundColor Red
    }
} catch {
    Write-Host "❌ Erreur: $_" -ForegroundColor Red
}

# Tester l'exécution de commandes
Write-Host "`n=== Test des commandes ==="
try {
    $nodeVersion = node --version 2>&1
    Write-Host "✅ Node.js version: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "❌ Node.js n'est pas accessible: $_" -ForegroundColor Red
}

try {
    $npmVersion = npm --version 2>&1
    Write-Host "✅ npm version: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "❌ npm n'est pas accessible: $_" -ForegroundColor Red
}

# Vérifier les fichiers importants
Write-Host "`n=== Vérification des fichiers ==="
$requiredFiles = @("package.json", "app.json", "scripts/scout.js")

foreach ($file in $requiredFiles) {
    if (Test-Path -Path $file) {
        Write-Host "✅ $file trouvé" -ForegroundColor Green
    } else {
        Write-Host "❌ $file est manquant" -ForegroundColor Red
    }
}

Write-Host "`n=== Test terminé ===" -ForegroundColor Green
Read-Host "Appuyez sur Entrée pour continuer..."
