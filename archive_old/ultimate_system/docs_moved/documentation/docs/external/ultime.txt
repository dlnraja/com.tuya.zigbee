INSTRUCTION GÉNÉRALE CURSOR – PILOTAGE COMPLET DU PROJET TUYA ZIGBEE (FULL AUTONOME, SDK3+, IA LOCALE, PS1+JS, FALLBACK, FORUM, NO DELETE, NO KEY REQUIRED)Tu dois exécuter et piloter entièrement le projet Homey Zigbee (com.tuya.zigbee et tuya-light) via un pipeline automatique et enrichissant basé sur le fichier principal mega-pipeline.js. Ce pipeline doit fonctionner sans intervention humaine, sans dépendance obligatoire à OpenAI ou GitHub, et doit appliquer toutes les étapes listées ci-dessous. Il doit s’adapter à tous les fichiers, scripts, données et outils présents dans le projet, y compris les variantes PowerShell (.ps1) ou Bash.OBJECTIFS GÉNÉRAUX :1. Le projet doit fonctionner même sans aucune clé API2. L’architecture doit être corrigée, enrichie, compatible SDK3+, rétrocompatible et 100 % Tuya3. Tous les fichiers manquants ou incomplets (README, changelog, JSON) doivent être complétés automatiquement4. Le projet doit supporter toutes les box Homey (Pro, Bridge, Cloud) et tous les firmwares Tuya5. Aucun appareil ni préférence déjà présent ne doit être supprimé ou modifié de façon destructive6. Tous les fichiers `fusion*` doivent être ignorés du dossier `drivers`7. Le script mega-pipeline.js doit : - Piloter tous les autres scripts dans le bon ordre logique - Exécuter intelligemment tous les fichiers `.js` et `.ps1` du projet - S’adapter automatiquement si d’autres scripts (js ou ps1) sont détectés - Harmoniser l'exécution globale, même en présence de fichiers PowerShell, avec conversion ou inspiration mutuelle des bonnes pratiques - Compléter les blocs de code manquants, les valeurs absentes, les drivers incomplets - Scanner et comprendre tout le projet avant d’agirPIPELINE À SUIVRE PAR MEGA-PIPELINE.JS :1. `fixAppStructure` : Corrige app.json, SDK3, app.js, paths2. `verifyAllDrivers` : Vérifie structure, syntaxe JSON, validité SDK3. `fetchNewDevices` : Recherche tous nouveaux appareils Tuya détectés (modelId, manufName, forums, GitHub)4. `smart-enrich-drivers` : - IA locale uniquement si pas de clé OpenAI - Basée sur `tuya-inference-db.json`, `cluster-map.json`, `.cache/forum-capability-map.json` - Matching de modelId/DPs/clusters/endpoints - Si incertitude → injecter : { "capabilities": ["onoff"], "fallback": true } - Peut s’inspirer des règles logiques vues dans les scripts .ps15. `scrapeHomeyCommunity` : Scrape uniquement les topics Tuya/Zigbee - https://community.homey.app/t/app-pro-tuya-zigbee-app/26439 - https://community.homey.app/t/app-pro-universal-tuya-zigbee-device-app-lite-version/140352/33 - Autres sujets Homey uniquement si pertinents Tuya/Zigbee6. `fix-from-forum-feedback` : Détecte les erreurs signalées dans les messages forum et corrige les drivers concernés7. `fetchGitHubIssues` : Récupère issues et PR GitHub uniquement si GITHUB_TOKEN dispo8. `resolveTodoDevices` : Génère tous les drivers `todo-*` automatiquement9. `test-multi-firmware-compatibility` : Vérifie compatibilité sur tous modèles Homey + firmwares Tuya10. `homey app validate` : Vérifie la validité Homey de l'app11. `generate-docs` : Crée README.md, CHANGELOG.md, drivers-matrix.mdADAPTATION AUTOMATIQUE :- Si un ou plusieurs scripts `.ps1` sont présents, tu dois : - Lire et comprendre leurs logiques - Convertir les éléments utiles en `.js` si pertinent - Reprendre les bonnes idées ou méthodes saines - Ne pas dupliquer inutilement, mais intégrer intelligemment- Si un fichier `.js` est présent mais non référencé dans mega-pipeline.js : - Scanner et l’intégrer automatiquement s’il est utile au projet - Exécuter ses effets ou extraire ses intentions dans la pipeline- Si un fichier nécessaire est absent (README.md, tuya-inference-db.json, etc.), tu dois : - Le générer automatiquement avec contenu pertinent - Utiliser les données existantes, forum, structure du projetTUYA-LIGHT :- Ne contient que des drivers Tuya- Aucune automatisation IA distante (OpenAI, etc.)- 100 % SDK3+- Fonctionne avec `homey app install` en local- Utilise les mêmes règles d’enrichissement, mais sans dépendance cloudEXECUTION :- Chaque étape de mega-pipeline doit continuer même en cas d’erreur (fallback)- Les tokens OPENAI_API_KEY et GITHUB_TOKEN sont optionnels, jamais requis- Le pipeline peut être déclenché manuellement ou automatiquement (cron, GitHub Actions)À CHAQUE EXÉCUTION, LE PROJET DOIT ÊTRE :- 100 % fonctionnel (homey app validate)- À jour avec tous les devices Tuya connus et inconnus- Rétrocompatible avec toutes les anciennes versions- Corrigé des bugs connus signalés dans les forums ou issues- Complet au niveau des fichiers et de la logique- Prêt à l’emploi même sans connexion internet ou API tierceCOLLE CE GROS BLOC DANS CURSOR POUR DÉCLENCHER LA PIPELINE GLOBALE ET INTELLIGENTE DE GESTION AUTOMATISÉE DU PROJET COM.TUYA.ZIGBEE ET TUYA-LIGHT. TU DOIS SUIVRE TOUTES CES RÈGLES ET ADAPTER LE COMPORTEMENT EN FONCTION DES FICHIERS PRÉSENTS.