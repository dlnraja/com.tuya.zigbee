{
  "total": 181,
  "byCategory": [
    {
      "category": "safety",
      "count": 30,
      "config": {
        "patterns": [
          "smoke",
          "gas",
          "co",
          "leak",
          "water",
          "flood",
          "fire"
        ],
        "context": "Life-safety critical monitoring",
        "priority": 100,
        "flows": {
          "triggers": [
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            },
            {
              "id": "high_consumption",
              "when": [
                "power_spike",
                "consumption_threshold"
              ],
              "description": "Abnormally high energy use",
              "useCase": "Alert for forgotten devices, detect malfunctions",
              "tokens": [
                "power_w",
                "baseline",
                "cost_impact"
              ]
            },
            {
              "id": "device_power_state",
              "when": [
                "device_powered_on",
                "standby_detected"
              ],
              "description": "Device power state changed",
              "useCase": "Track usage, detect vampires, automate shutoff",
              "tokens": [
                "state",
                "power_draw",
                "duration"
              ]
            },
            {
              "id": "daily_energy_report",
              "when": [
                "daily_threshold",
                "cost_exceeded"
              ],
              "description": "Daily energy summary",
              "useCase": "Cost tracking, usage patterns, savings tips",
              "tokens": [
                "total_kwh",
                "cost",
                "comparison_yesterday"
              ]
            },
            {
              "id": "air_quality_warning",
              "when": [
                "co2_high",
                "tvoc_high",
                "pm25_high"
              ],
              "description": "Air quality degraded",
              "useCase": "Open windows, activate purifier, send health alert",
              "tokens": [
                "pollutant_type",
                "level",
                "health_risk"
              ],
              "smartLogic": "Different actions for different pollutants"
            },
            {
              "id": "air_quality_critical",
              "when": [
                "dangerous_levels"
              ],
              "description": "Air quality dangerous",
              "useCase": "Emergency ventilation, evacuate notification",
              "tokens": [
                "pollutant",
                "level",
                "safe_threshold"
              ]
            },
            {
              "id": "security_breach",
              "when": [
                "alarm_triggered",
                "door_forced",
                "tamper_detected"
              ],
              "description": "Critical security event requiring immediate action",
              "useCase": "Send notifications, trigger sirens, call emergency contacts",
              "tokens": [
                "timestamp",
                "location",
                "severity"
              ]
            },
            {
              "id": "armed_state_changed",
              "when": [
                "armed",
                "disarmed"
              ],
              "description": "Security system state changed",
              "useCase": "Log events, adjust home mode, notify users",
              "tokens": [
                "previous_state",
                "new_state",
                "user"
              ]
            }
          ],
          "conditions": [
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            },
            {
              "id": "consuming_power",
              "logic": "Device currently drawing power",
              "useCase": "Detect if device actually running"
            },
            {
              "id": "peak_hours",
              "logic": "Currently in peak rate period",
              "useCase": "Delay high-power tasks"
            },
            {
              "id": "air_quality_good",
              "logic": "All air quality metrics in healthy range",
              "useCase": "Safe to close windows, turn off purifier"
            },
            {
              "id": "is_armed",
              "logic": "Check if security system is armed",
              "useCase": "Prevent automation when armed"
            },
            {
              "id": "recent_activity",
              "logic": "Check if security event in last N minutes",
              "useCase": "Avoid false alarms, rate limiting"
            }
          ],
          "actions": [
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            },
            {
              "id": "load_shedding",
              "execute": "Turn off non-essential devices during peak",
              "useCase": "Reduce costs, prevent overload"
            },
            {
              "id": "improve_air_quality",
              "execute": "Activate all air quality improvement devices",
              "useCase": "Purifiers, ventilation, humidifiers coordination"
            },
            {
              "id": "emergency_protocol",
              "execute": "Activate full security protocol",
              "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "water_leak_sensor_battery",
          "displayName": "Water Leak Sensor (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting",
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "alarm_water",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "alarm_water",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "gas_detector_battery",
          "displayName": "Gas Detector (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting",
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "alarm_motion",
              "alarm_co",
              "measure_battery",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "alarm_motion",
            "alarm_co",
            "measure_battery",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "smoke_detector_battery",
          "displayName": "Smoke Detector (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting",
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "alarm_smoke",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "alarm_smoke",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "fan_controller_ac",
          "displayName": "Fan Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "sensor"
        },
        {
          "driver": "hvac_controller_ac",
          "displayName": "Hvac Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "target_temperature",
              "measure_temperature"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature"
          ],
          "class": "sensor"
        },
        {
          "driver": "scene_controller_8button_cr2032",
          "displayName": "8-Button Remote",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "button.6",
              "button.7",
              "button.8",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "button.6",
            "button.7",
            "button.8",
            "measure_battery"
          ],
          "class": "button"
        },
        {
          "driver": "scene_controller_6button_cr2032",
          "displayName": "6-Button Remote",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "button.6",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "button.6",
            "measure_battery"
          ],
          "class": "button"
        },
        {
          "driver": "water_valve_smart_hybrid",
          "displayName": "Water Valve Smart",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting",
              "climate"
            ],
            "capabilities": [
              "onoff",
              "measure_water",
              "alarm_water",
              "measure_battery",
              "measure_temperature",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_water",
            "alarm_water",
            "measure_battery",
            "measure_temperature",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "roller_blind_controller_ac",
          "displayName": "Curtain Motor (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "windowcoverings_state",
              "dim",
              "windowcoverings_set",
              "windowcoverings_tilt_set",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "windowcoverings_state",
            "dim",
            "windowcoverings_set",
            "windowcoverings_tilt_set",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "scene_controller_4button_cr2032",
          "displayName": "4-Button Remote",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "measure_battery"
          ],
          "class": "button"
        },
        {
          "driver": "smart_water_valve_hybrid",
          "displayName": "Smart Water Valve",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "target_temperature",
              "measure_temperature",
              "alarm_water",
              "measure_battery",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature",
            "alarm_water",
            "measure_battery",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "solar_panel_controller_hybrid",
          "displayName": "Solar Panel Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "energy",
              "lighting"
            ],
            "capabilities": [
              "measure_power",
              "measure_voltage",
              "measure_current",
              "measure_battery",
              "onoff"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_power",
            "measure_voltage",
            "measure_current",
            "measure_battery",
            "onoff"
          ],
          "class": "sensor"
        },
        {
          "driver": "water_valve_hybrid",
          "displayName": "Water Valve",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "target_temperature",
              "measure_temperature",
              "alarm_water",
              "measure_battery",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature",
            "alarm_water",
            "measure_battery",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "gas_sensor_ts0601_battery",
          "displayName": "Gas Sensor TS0601 (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "alarm_co",
              "alarm_smoke",
              "measure_battery",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_co",
            "alarm_smoke",
            "measure_battery",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "roller_shutter_controller_ac",
          "displayName": "Roller Shutter Controller (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "windowcoverings_set",
              "windowcoverings_state",
              "measure_battery",
              "windowcoverings_tilt_set"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "windowcoverings_set",
            "windowcoverings_state",
            "measure_battery",
            "windowcoverings_tilt_set"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_irrigation_controller_hybrid",
          "displayName": "Smart Irrigation Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_water",
              "alarm_water",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_water",
            "alarm_water",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_smoke_detector_advanced_battery",
          "displayName": "Smart Smoke Detector Advanced (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "alarm_smoke",
              "measure_battery",
              "alarm_tamper",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_smoke",
            "measure_battery",
            "alarm_tamper",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "water_leak_detector_advanced_battery",
          "displayName": "Water Leak Detector Advanced (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "alarm_water",
              "measure_temperature",
              "measure_battery",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_water",
            "measure_temperature",
            "measure_battery",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "water_leak_detector_battery",
          "displayName": "Water Leak Detector (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "alarm_water",
              "measure_battery",
              "measure_temperature",
              "alarm_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_water",
            "measure_battery",
            "measure_temperature",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "co_detector_pro_battery",
          "displayName": "CO Detector Pro (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "alarm_co",
              "measure_co",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_co",
            "measure_co",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "scene_controller_2button_cr2032",
          "displayName": "2-Button Remote",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "button.2",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "measure_battery"
          ],
          "class": "button"
        },
        {
          "driver": "tank_level_monitor_cr2032",
          "displayName": "Tank Level Monitor (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "measure_water",
              "alarm_water",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_water",
            "alarm_water",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "scene_controller_battery",
          "displayName": "Scene Switch (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_valve_controller_hybrid",
          "displayName": "Smart Valve Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "wireless_scene_controller_4button_battery",
          "displayName": "Wireless Scene Controller 4-Button (Battery)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "measure_battery"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_battery"
          ],
          "class": "button"
        },
        {
          "driver": "pool_pump_controller_ac",
          "displayName": "Pool Pump Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting",
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "measure_current",
              "dim"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "measure_current",
            "dim"
          ],
          "class": "sensor"
        },
        {
          "driver": "gas_sensor_ts0601_ac",
          "displayName": "Gas Sensor TS0601 (AC)",
          "intelligence": {
            "primary": "safety",
            "secondary": [],
            "capabilities": [
              "alarm_co",
              "alarm_smoke"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_co",
            "alarm_smoke"
          ],
          "class": "sensor"
        },
        {
          "driver": "projector_screen_controller_ac",
          "displayName": "Projector Screen Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff"
          ],
          "class": "sensor"
        },
        {
          "driver": "scene_controller",
          "displayName": "Scene Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff"
          ],
          "class": "sensor"
        },
        {
          "driver": "shade_controller_ac",
          "displayName": "Shade Controller",
          "intelligence": {
            "primary": "safety",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff"
            ],
            "context": "Life-safety critical monitoring",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff"
          ],
          "class": "sensor"
        }
      ]
    },
    {
      "category": "security",
      "count": 6,
      "config": {
        "patterns": [
          "lock",
          "alarm",
          "siren",
          "sos",
          "panic",
          "emergency"
        ],
        "context": "Critical safety and security",
        "priority": 100,
        "flows": {
          "triggers": [
            {
              "id": "security_breach",
              "when": [
                "alarm_triggered",
                "door_forced",
                "tamper_detected"
              ],
              "description": "Critical security event requiring immediate action",
              "useCase": "Send notifications, trigger sirens, call emergency contacts",
              "tokens": [
                "timestamp",
                "location",
                "severity"
              ]
            },
            {
              "id": "armed_state_changed",
              "when": [
                "armed",
                "disarmed"
              ],
              "description": "Security system state changed",
              "useCase": "Log events, adjust home mode, notify users",
              "tokens": [
                "previous_state",
                "new_state",
                "user"
              ]
            },
            {
              "id": "entry_opened",
              "when": [
                "contact_opened",
                "door_opened"
              ],
              "description": "Door or window opened",
              "useCase": "Welcome home, security check, climate adjustment",
              "tokens": [
                "which_entry",
                "armed_status",
                "outside_temperature"
              ],
              "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
            },
            {
              "id": "entry_left_open",
              "when": [
                "contact_open_timeout"
              ],
              "description": "Entry left open beyond threshold",
              "useCase": "Energy saving alert, security warning",
              "tokens": [
                "duration_open",
                "energy_wasted"
              ]
            },
            {
              "id": "all_entries_closed",
              "when": [
                "all_contacts_closed"
              ],
              "description": "All doors and windows secured",
              "useCase": "Ready for security arm, activate climate",
              "tokens": [
                "total_entries",
                "time_to_close"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            }
          ],
          "conditions": [
            {
              "id": "is_armed",
              "logic": "Check if security system is armed",
              "useCase": "Prevent automation when armed"
            },
            {
              "id": "recent_activity",
              "logic": "Check if security event in last N minutes",
              "useCase": "Avoid false alarms, rate limiting"
            },
            {
              "id": "any_entry_open",
              "logic": "Check if any door/window is open",
              "useCase": "Block HVAC activation, security check"
            },
            {
              "id": "specific_entry_state",
              "logic": "Check state of specific door/window",
              "useCase": "Location-based automation"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            }
          ],
          "actions": [
            {
              "id": "emergency_protocol",
              "execute": "Activate full security protocol",
              "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
            },
            {
              "id": "secure_home",
              "execute": "Close automated curtains, lock doors, arm system",
              "useCase": "Leaving home or bedtime routine"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "sos_emergency_button_cr2032",
          "displayName": "SOS Emergency Button (Battery)",
          "intelligence": {
            "primary": "security",
            "secondary": [],
            "capabilities": [
              "button.sos",
              "alarm_generic",
              "measure_battery"
            ],
            "context": "Critical safety and security",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "button.sos",
            "alarm_generic",
            "measure_battery"
          ],
          "class": "button"
        },
        {
          "driver": "door_lock_battery",
          "displayName": "Door Lock (Battery)",
          "intelligence": {
            "primary": "security",
            "secondary": [
              "contact"
            ],
            "capabilities": [
              "locked",
              "alarm_tamper",
              "measure_battery",
              "alarm_contact",
              "alarm_battery"
            ],
            "context": "Critical safety and security",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "alarm_tamper",
            "measure_battery",
            "alarm_contact",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "outdoor_siren_cr2032",
          "displayName": "Outdoor Siren (Battery)",
          "intelligence": {
            "primary": "security",
            "secondary": [
              "contact"
            ],
            "capabilities": [
              "locked",
              "measure_battery",
              "alarm_contact",
              "alarm_generic",
              "volume_set"
            ],
            "context": "Critical safety and security",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "measure_battery",
            "alarm_contact",
            "alarm_generic",
            "volume_set"
          ],
          "class": "sensor"
        },
        {
          "driver": "fingerprint_lock_battery",
          "displayName": "Fingerprint Lock (Battery)",
          "intelligence": {
            "primary": "security",
            "secondary": [],
            "capabilities": [
              "locked",
              "measure_battery",
              "alarm_generic"
            ],
            "context": "Critical safety and security",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "measure_battery",
            "alarm_generic"
          ],
          "class": "lock"
        },
        {
          "driver": "smart_lock_battery",
          "displayName": "Smart Lock (Battery)",
          "intelligence": {
            "primary": "security",
            "secondary": [],
            "capabilities": [
              "locked",
              "alarm_generic",
              "measure_battery"
            ],
            "context": "Critical safety and security",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "alarm_generic",
            "measure_battery"
          ],
          "class": "lock"
        },
        {
          "driver": "alarm_siren_chime_ac",
          "displayName": "Alarm Siren Chime Ac",
          "intelligence": {
            "primary": "security",
            "secondary": [],
            "capabilities": [
              "alarm_generic"
            ],
            "context": "Critical safety and security",
            "priority": 100,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_generic"
          ],
          "class": "other"
        }
      ]
    },
    {
      "category": "airQuality",
      "count": 9,
      "config": {
        "patterns": [
          "co2",
          "tvoc",
          "formaldehyde",
          "pm25",
          "pm10",
          "air",
          "quality"
        ],
        "context": "Health & safety air monitoring",
        "priority": 95,
        "flows": {
          "triggers": [
            {
              "id": "air_quality_warning",
              "when": [
                "co2_high",
                "tvoc_high",
                "pm25_high"
              ],
              "description": "Air quality degraded",
              "useCase": "Open windows, activate purifier, send health alert",
              "tokens": [
                "pollutant_type",
                "level",
                "health_risk"
              ],
              "smartLogic": "Different actions for different pollutants"
            },
            {
              "id": "air_quality_critical",
              "when": [
                "dangerous_levels"
              ],
              "description": "Air quality dangerous",
              "useCase": "Emergency ventilation, evacuate notification",
              "tokens": [
                "pollutant",
                "level",
                "safe_threshold"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "security_breach",
              "when": [
                "alarm_triggered",
                "door_forced",
                "tamper_detected"
              ],
              "description": "Critical security event requiring immediate action",
              "useCase": "Send notifications, trigger sirens, call emergency contacts",
              "tokens": [
                "timestamp",
                "location",
                "severity"
              ]
            },
            {
              "id": "armed_state_changed",
              "when": [
                "armed",
                "disarmed"
              ],
              "description": "Security system state changed",
              "useCase": "Log events, adjust home mode, notify users",
              "tokens": [
                "previous_state",
                "new_state",
                "user"
              ]
            },
            {
              "id": "high_consumption",
              "when": [
                "power_spike",
                "consumption_threshold"
              ],
              "description": "Abnormally high energy use",
              "useCase": "Alert for forgotten devices, detect malfunctions",
              "tokens": [
                "power_w",
                "baseline",
                "cost_impact"
              ]
            },
            {
              "id": "device_power_state",
              "when": [
                "device_powered_on",
                "standby_detected"
              ],
              "description": "Device power state changed",
              "useCase": "Track usage, detect vampires, automate shutoff",
              "tokens": [
                "state",
                "power_draw",
                "duration"
              ]
            },
            {
              "id": "daily_energy_report",
              "when": [
                "daily_threshold",
                "cost_exceeded"
              ],
              "description": "Daily energy summary",
              "useCase": "Cost tracking, usage patterns, savings tips",
              "tokens": [
                "total_kwh",
                "cost",
                "comparison_yesterday"
              ]
            }
          ],
          "conditions": [
            {
              "id": "air_quality_good",
              "logic": "All air quality metrics in healthy range",
              "useCase": "Safe to close windows, turn off purifier"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "is_armed",
              "logic": "Check if security system is armed",
              "useCase": "Prevent automation when armed"
            },
            {
              "id": "recent_activity",
              "logic": "Check if security event in last N minutes",
              "useCase": "Avoid false alarms, rate limiting"
            },
            {
              "id": "consuming_power",
              "logic": "Device currently drawing power",
              "useCase": "Detect if device actually running"
            },
            {
              "id": "peak_hours",
              "logic": "Currently in peak rate period",
              "useCase": "Delay high-power tasks"
            }
          ],
          "actions": [
            {
              "id": "improve_air_quality",
              "execute": "Activate all air quality improvement devices",
              "useCase": "Purifiers, ventilation, humidifiers coordination"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "emergency_protocol",
              "execute": "Activate full security protocol",
              "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
            },
            {
              "id": "load_shedding",
              "execute": "Turn off non-essential devices during peak",
              "useCase": "Reduce costs, prevent overload"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "tvoc_sensor_advanced_battery",
          "displayName": "TVOC Sensor Advanced (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "measure_co2",
              "measure_tvoc",
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_co2",
            "measure_tvoc",
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "co2_sensor_battery",
          "displayName": "CO₂ Sensor (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "safety",
              "climate",
              "presence"
            ],
            "capabilities": [
              "measure_co2",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery",
              "alarm_co2"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_co2",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery",
            "alarm_co2"
          ],
          "class": "sensor"
        },
        {
          "driver": "formaldehyde_sensor_battery",
          "displayName": "Formaldehyde Sensor (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "pm25_sensor_battery",
          "displayName": "Pm25 Sensor (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "tvoc_sensor_battery",
          "displayName": "Tvoc Sensor (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "air_quality_monitor_pro_battery",
          "displayName": "air quality monitor pro (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "measure_co2",
              "measure_temperature",
              "measure_battery"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_co2",
            "measure_temperature",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "pm25_detector_battery",
          "displayName": "pm25 detector (Battery)",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "lighting",
              "climate"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "measure_battery"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "comprehensive_air_monitor_ac",
          "displayName": "Comprehensive Air Monitor",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "safety",
              "climate"
            ],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_co2",
              "measure_pm25"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_co2",
            "measure_pm25"
          ],
          "class": "sensor"
        },
        {
          "driver": "air_quality_monitor_ac",
          "displayName": "air quality monitor",
          "intelligence": {
            "primary": "airQuality",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff"
            ],
            "context": "Health & safety air monitoring",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff"
          ],
          "class": "sensor"
        }
      ]
    },
    {
      "category": "presence",
      "count": 14,
      "config": {
        "patterns": [
          "motion",
          "pir",
          "occupancy",
          "presence",
          "radar",
          "mmwave"
        ],
        "context": "Occupancy detection for automation & security",
        "priority": 95,
        "flows": {
          "triggers": [
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "security_breach",
              "when": [
                "alarm_triggered",
                "door_forced",
                "tamper_detected"
              ],
              "description": "Critical security event requiring immediate action",
              "useCase": "Send notifications, trigger sirens, call emergency contacts",
              "tokens": [
                "timestamp",
                "location",
                "severity"
              ]
            },
            {
              "id": "armed_state_changed",
              "when": [
                "armed",
                "disarmed"
              ],
              "description": "Security system state changed",
              "useCase": "Log events, adjust home mode, notify users",
              "tokens": [
                "previous_state",
                "new_state",
                "user"
              ]
            }
          ],
          "conditions": [
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "is_armed",
              "logic": "Check if security system is armed",
              "useCase": "Prevent automation when armed"
            },
            {
              "id": "recent_activity",
              "logic": "Check if security event in last N minutes",
              "useCase": "Avoid false alarms, rate limiting"
            }
          ],
          "actions": [
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "emergency_protocol",
              "execute": "Activate full security protocol",
              "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "presence_sensor_radar_battery",
          "displayName": "Presence Sensor Radar (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [
              "lighting",
              "climate"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_sensor_battery",
          "displayName": "Motion Sensor (PIR, Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "radar_motion_sensor_mmwave_battery",
          "displayName": "Radar Presence Sensor (mmWave) (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [
              "security"
            ],
            "capabilities": [
              "alarm_motion",
              "measure_battery",
              "measure_luminance",
              "alarm_generic"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_battery",
            "measure_luminance",
            "alarm_generic"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_sensor_illuminance_battery",
          "displayName": "Motion Sensor with Illuminance (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_sensor_mmwave_battery",
          "displayName": "Motion Sensor (mmWave Radar, Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_battery",
              "measure_luminance"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_battery",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_sensor_pir_ac_battery",
          "displayName": "PIR Motion Sensor (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_sensor_pir_battery",
          "displayName": "PIR Motion Sensor (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_battery",
              "measure_luminance"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_battery",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_sensor_zigbee_204z_battery",
          "displayName": "PIR Motion Sensor (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_battery",
              "measure_luminance"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_battery",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "pir_radar_illumination_sensor_battery",
          "displayName": "PIR Radar Illumination Sensor Battery (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_battery",
              "measure_luminance"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_battery",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "pir_sensor_advanced_battery",
          "displayName": "PIR Motion Sensor Advanced (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "presence_sensor_mmwave_battery",
          "displayName": "Presence Sensor Mmwave Battery (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "radar_motion_sensor_advanced_battery",
          "displayName": "Radar Motion Sensor Advanced (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "radar_motion_sensor_tank_level_battery",
          "displayName": "Radar Motion Sensor Pro (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [],
            "capabilities": [
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "motion_temp_humidity_illumination_multi_battery",
          "displayName": "Multi-Sensor (Motion + Lux + Temp) (Battery)",
          "intelligence": {
            "primary": "presence",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "alarm_motion",
              "measure_battery",
              "measure_luminance",
              "measure_temperature",
              "measure_humidity"
            ],
            "context": "Occupancy detection for automation & security",
            "priority": 95,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_motion",
            "measure_battery",
            "measure_luminance",
            "measure_temperature",
            "measure_humidity"
          ],
          "class": "sensor"
        }
      ]
    },
    {
      "category": "contact",
      "count": 10,
      "config": {
        "patterns": [
          "contact",
          "door",
          "window",
          "opening"
        ],
        "context": "Entry monitoring for security & climate",
        "priority": 90,
        "flows": {
          "triggers": [
            {
              "id": "entry_opened",
              "when": [
                "contact_opened",
                "door_opened"
              ],
              "description": "Door or window opened",
              "useCase": "Welcome home, security check, climate adjustment",
              "tokens": [
                "which_entry",
                "armed_status",
                "outside_temperature"
              ],
              "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
            },
            {
              "id": "entry_left_open",
              "when": [
                "contact_open_timeout"
              ],
              "description": "Entry left open beyond threshold",
              "useCase": "Energy saving alert, security warning",
              "tokens": [
                "duration_open",
                "energy_wasted"
              ]
            },
            {
              "id": "all_entries_closed",
              "when": [
                "all_contacts_closed"
              ],
              "description": "All doors and windows secured",
              "useCase": "Ready for security arm, activate climate",
              "tokens": [
                "total_entries",
                "time_to_close"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            },
            {
              "id": "security_breach",
              "when": [
                "alarm_triggered",
                "door_forced",
                "tamper_detected"
              ],
              "description": "Critical security event requiring immediate action",
              "useCase": "Send notifications, trigger sirens, call emergency contacts",
              "tokens": [
                "timestamp",
                "location",
                "severity"
              ]
            },
            {
              "id": "armed_state_changed",
              "when": [
                "armed",
                "disarmed"
              ],
              "description": "Security system state changed",
              "useCase": "Log events, adjust home mode, notify users",
              "tokens": [
                "previous_state",
                "new_state",
                "user"
              ]
            },
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "high_consumption",
              "when": [
                "power_spike",
                "consumption_threshold"
              ],
              "description": "Abnormally high energy use",
              "useCase": "Alert for forgotten devices, detect malfunctions",
              "tokens": [
                "power_w",
                "baseline",
                "cost_impact"
              ]
            },
            {
              "id": "device_power_state",
              "when": [
                "device_powered_on",
                "standby_detected"
              ],
              "description": "Device power state changed",
              "useCase": "Track usage, detect vampires, automate shutoff",
              "tokens": [
                "state",
                "power_draw",
                "duration"
              ]
            },
            {
              "id": "daily_energy_report",
              "when": [
                "daily_threshold",
                "cost_exceeded"
              ],
              "description": "Daily energy summary",
              "useCase": "Cost tracking, usage patterns, savings tips",
              "tokens": [
                "total_kwh",
                "cost",
                "comparison_yesterday"
              ]
            }
          ],
          "conditions": [
            {
              "id": "any_entry_open",
              "logic": "Check if any door/window is open",
              "useCase": "Block HVAC activation, security check"
            },
            {
              "id": "specific_entry_state",
              "logic": "Check state of specific door/window",
              "useCase": "Location-based automation"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            },
            {
              "id": "is_armed",
              "logic": "Check if security system is armed",
              "useCase": "Prevent automation when armed"
            },
            {
              "id": "recent_activity",
              "logic": "Check if security event in last N minutes",
              "useCase": "Avoid false alarms, rate limiting"
            },
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "consuming_power",
              "logic": "Device currently drawing power",
              "useCase": "Detect if device actually running"
            },
            {
              "id": "peak_hours",
              "logic": "Currently in peak rate period",
              "useCase": "Delay high-power tasks"
            }
          ],
          "actions": [
            {
              "id": "secure_home",
              "execute": "Close automated curtains, lock doors, arm system",
              "useCase": "Leaving home or bedtime routine"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            },
            {
              "id": "emergency_protocol",
              "execute": "Activate full security protocol",
              "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
            },
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "load_shedding",
              "execute": "Turn off non-essential devices during peak",
              "useCase": "Reduce costs, prevent overload"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "door_window_sensor_battery",
          "displayName": "Door Window Sensor (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "lighting",
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "alarm_contact",
              "alarm_battery"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "alarm_contact",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_doorbell_battery",
          "displayName": "Smart Doorbell (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "security"
            ],
            "capabilities": [
              "locked",
              "measure_battery",
              "alarm_contact",
              "alarm_generic",
              "volume_set",
              "alarm_battery"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "measure_battery",
            "alarm_contact",
            "alarm_generic",
            "volume_set",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "doorbell_cr2032",
          "displayName": "Doorbell (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "security"
            ],
            "capabilities": [
              "locked",
              "measure_battery",
              "alarm_contact",
              "alarm_generic",
              "volume_set"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "measure_battery",
            "alarm_contact",
            "alarm_generic",
            "volume_set"
          ],
          "class": "sensor"
        },
        {
          "driver": "contact_sensor_battery",
          "displayName": "Contact Sensor Battery (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "alarm_contact",
              "measure_battery"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_contact",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "outdoor_light_controller_ac",
          "displayName": "Outdoor Light Controller (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "lighting",
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "alarm_contact",
              "measure_battery",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "alarm_contact",
            "measure_battery",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "sensor"
        },
        {
          "driver": "doorbell_camera_ac",
          "displayName": "Doorbell Camera Ac",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "security",
              "presence"
            ],
            "capabilities": [
              "alarm_generic",
              "alarm_motion"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_generic",
            "alarm_motion"
          ],
          "class": "sensor"
        },
        {
          "driver": "led_strip_outdoor_color_ac",
          "displayName": "Led Strip Outdoor Color Ac",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "lighting",
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation"
          ],
          "class": "light"
        },
        {
          "driver": "garage_door_controller_ac",
          "displayName": "Garage Door Controller (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "garagedoor_closed",
              "button.open",
              "button.close",
              "alarm_contact",
              "measure_battery"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "garagedoor_closed",
            "button.open",
            "button.close",
            "alarm_contact",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "door_controller_ac",
          "displayName": "Led Strip (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "safety",
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "alarm_contact",
              "measure_battery"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "alarm_contact",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "garage_door_opener_cr2032",
          "displayName": "Garage Door Opener (Battery)",
          "intelligence": {
            "primary": "contact",
            "secondary": [
              "security"
            ],
            "capabilities": [
              "locked",
              "measure_battery",
              "alarm_contact"
            ],
            "context": "Entry monitoring for security & climate",
            "priority": 90,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "entry_opened",
                  "when": [
                    "contact_opened",
                    "door_opened"
                  ],
                  "description": "Door or window opened",
                  "useCase": "Welcome home, security check, climate adjustment",
                  "tokens": [
                    "which_entry",
                    "armed_status",
                    "outside_temperature"
                  ],
                  "smartLogic": "If armed: security alert. If climate active: pause heating/cooling. If night: log entry."
                },
                {
                  "id": "entry_left_open",
                  "when": [
                    "contact_open_timeout"
                  ],
                  "description": "Entry left open beyond threshold",
                  "useCase": "Energy saving alert, security warning",
                  "tokens": [
                    "duration_open",
                    "energy_wasted"
                  ]
                },
                {
                  "id": "all_entries_closed",
                  "when": [
                    "all_contacts_closed"
                  ],
                  "description": "All doors and windows secured",
                  "useCase": "Ready for security arm, activate climate",
                  "tokens": [
                    "total_entries",
                    "time_to_close"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "any_entry_open",
                  "logic": "Check if any door/window is open",
                  "useCase": "Block HVAC activation, security check"
                },
                {
                  "id": "specific_entry_state",
                  "logic": "Check state of specific door/window",
                  "useCase": "Location-based automation"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "secure_home",
                  "execute": "Close automated curtains, lock doors, arm system",
                  "useCase": "Leaving home or bedtime routine"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "locked",
            "measure_battery",
            "alarm_contact"
          ],
          "class": "sensor"
        }
      ]
    },
    {
      "category": "climate",
      "count": 25,
      "config": {
        "patterns": [
          "temperature",
          "temp",
          "humid",
          "climate",
          "thermostat"
        ],
        "context": "Environmental monitoring for comfort & efficiency",
        "priority": 85,
        "flows": {
          "triggers": [
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "high_consumption",
              "when": [
                "power_spike",
                "consumption_threshold"
              ],
              "description": "Abnormally high energy use",
              "useCase": "Alert for forgotten devices, detect malfunctions",
              "tokens": [
                "power_w",
                "baseline",
                "cost_impact"
              ]
            },
            {
              "id": "device_power_state",
              "when": [
                "device_powered_on",
                "standby_detected"
              ],
              "description": "Device power state changed",
              "useCase": "Track usage, detect vampires, automate shutoff",
              "tokens": [
                "state",
                "power_draw",
                "duration"
              ]
            },
            {
              "id": "daily_energy_report",
              "when": [
                "daily_threshold",
                "cost_exceeded"
              ],
              "description": "Daily energy summary",
              "useCase": "Cost tracking, usage patterns, savings tips",
              "tokens": [
                "total_kwh",
                "cost",
                "comparison_yesterday"
              ]
            },
            {
              "id": "air_quality_warning",
              "when": [
                "co2_high",
                "tvoc_high",
                "pm25_high"
              ],
              "description": "Air quality degraded",
              "useCase": "Open windows, activate purifier, send health alert",
              "tokens": [
                "pollutant_type",
                "level",
                "health_risk"
              ],
              "smartLogic": "Different actions for different pollutants"
            },
            {
              "id": "air_quality_critical",
              "when": [
                "dangerous_levels"
              ],
              "description": "Air quality dangerous",
              "useCase": "Emergency ventilation, evacuate notification",
              "tokens": [
                "pollutant",
                "level",
                "safe_threshold"
              ]
            },
            {
              "id": "security_breach",
              "when": [
                "alarm_triggered",
                "door_forced",
                "tamper_detected"
              ],
              "description": "Critical security event requiring immediate action",
              "useCase": "Send notifications, trigger sirens, call emergency contacts",
              "tokens": [
                "timestamp",
                "location",
                "severity"
              ]
            },
            {
              "id": "armed_state_changed",
              "when": [
                "armed",
                "disarmed"
              ],
              "description": "Security system state changed",
              "useCase": "Log events, adjust home mode, notify users",
              "tokens": [
                "previous_state",
                "new_state",
                "user"
              ]
            }
          ],
          "conditions": [
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "consuming_power",
              "logic": "Device currently drawing power",
              "useCase": "Detect if device actually running"
            },
            {
              "id": "peak_hours",
              "logic": "Currently in peak rate period",
              "useCase": "Delay high-power tasks"
            },
            {
              "id": "air_quality_good",
              "logic": "All air quality metrics in healthy range",
              "useCase": "Safe to close windows, turn off purifier"
            },
            {
              "id": "is_armed",
              "logic": "Check if security system is armed",
              "useCase": "Prevent automation when armed"
            },
            {
              "id": "recent_activity",
              "logic": "Check if security event in last N minutes",
              "useCase": "Avoid false alarms, rate limiting"
            }
          ],
          "actions": [
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "load_shedding",
              "execute": "Turn off non-essential devices during peak",
              "useCase": "Reduce costs, prevent overload"
            },
            {
              "id": "improve_air_quality",
              "execute": "Activate all air quality improvement devices",
              "useCase": "Purifiers, ventilation, humidifiers coordination"
            },
            {
              "id": "emergency_protocol",
              "execute": "Activate full security protocol",
              "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "smoke_temp_humid_sensor_battery",
          "displayName": "Smoke Temperature Humidity Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "safety",
              "presence"
            ],
            "capabilities": [
              "alarm_smoke",
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance",
              "alarm_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_smoke",
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "temp_humid_sensor_leak_detector_battery",
          "displayName": "Water Leak Sensor",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "safety",
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance",
              "alarm_water",
              "alarm_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance",
            "alarm_water",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "temperature_sensor_advanced_battery",
          "displayName": "Temperature Sensor THS317-ET-TU (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance",
              "temp_alarm"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance",
            "temp_alarm"
          ],
          "class": "sensor"
        },
        {
          "driver": "temperature_sensor_battery",
          "displayName": "Temperature Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance",
              "temp_alarm"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance",
            "temp_alarm"
          ],
          "class": "sensor"
        },
        {
          "driver": "temp_humid_sensor_advanced_battery",
          "displayName": "Temperature & Humidity Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_pressure",
              "measure_luminance",
              "measure_battery",
              "alarm_motion"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_pressure",
            "measure_luminance",
            "measure_battery",
            "alarm_motion"
          ],
          "class": "sensor"
        },
        {
          "driver": "temp_sensor_pro_battery",
          "displayName": "temp sensor pro (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "lighting",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "temp_humid_sensor_dd_battery",
          "displayName": "Temperature Humidity Sensor v1w2k9dd (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "lux_sensor_battery",
          "displayName": "Lux Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "noise_level_sensor_battery",
          "displayName": "Noise Level Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_temperature",
              "alarm_motion",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "alarm_motion",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "pressure_sensor_battery",
          "displayName": "Pressure Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "presence"
            ],
            "capabilities": [
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_thermostat_hybrid",
          "displayName": "Smart Thermostat",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "target_temperature",
              "measure_temperature",
              "thermostat_mode",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature",
            "thermostat_mode",
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "thermostat_hybrid",
          "displayName": "Thermostat",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "target_temperature",
              "measure_temperature",
              "thermostat_mode",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature",
            "thermostat_mode",
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "smart_radiator_valve_hybrid",
          "displayName": "Smart Radiator Valve",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "target_temperature",
              "measure_temperature"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature"
          ],
          "class": "other"
        },
        {
          "driver": "climate_monitor_cr2032",
          "displayName": "climate monitor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "target_temperature",
              "thermostat_mode"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "target_temperature",
            "thermostat_mode"
          ],
          "class": "sensor"
        },
        {
          "driver": "smoke_detector_temperature_battery",
          "displayName": "Smoke Detector with Temperature (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "alarm_smoke",
              "alarm_fire",
              "measure_temperature",
              "alarm_battery",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_smoke",
            "alarm_fire",
            "measure_temperature",
            "alarm_battery",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "smoke_detector_temp_humidity_advanced_battery",
          "displayName": "Advanced Smoke Detector with Temperature & Humidity (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "alarm_smoke",
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "alarm_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "alarm_smoke",
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "alarm_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "temperature_controller_hybrid",
          "displayName": "Temperature Controller",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "target_temperature",
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "temp_alarm"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "target_temperature",
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "temp_alarm"
          ],
          "class": "sensor"
        },
        {
          "driver": "co2_temp_humidity_cr2032",
          "displayName": "co2 temp humidity (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "airQuality",
              "safety",
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "measure_humidity",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "humidity_controller_ac",
          "displayName": "humidity controller (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [
              "safety",
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "measure_humidity",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "soil_tester_temp_humid_cr2032",
          "displayName": "Soil Tester Temperature Humidity (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_luminance",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_luminance",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "temperature_humidity_sensor_battery",
          "displayName": "Temperature Humidity Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery",
              "temp_alarm"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery",
            "temp_alarm"
          ],
          "class": "sensor"
        },
        {
          "driver": "pet_feeder_cr2032",
          "displayName": "Pet Feeder (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "smart_garden_sprinkler_battery",
          "displayName": "Smart Garden Sprinkler (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "soil_moisture_temperature_sensor_battery",
          "displayName": "Soil Moisture & Temperature Sensor (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "class": "sensor"
        },
        {
          "driver": "temperature_humidity_display_battery",
          "displayName": "Temperature Humidity Display (Battery)",
          "intelligence": {
            "primary": "climate",
            "secondary": [],
            "capabilities": [
              "measure_temperature",
              "measure_humidity",
              "measure_battery"
            ],
            "context": "Environmental monitoring for comfort & efficiency",
            "priority": 85,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "air_quality_warning",
                  "when": [
                    "co2_high",
                    "tvoc_high",
                    "pm25_high"
                  ],
                  "description": "Air quality degraded",
                  "useCase": "Open windows, activate purifier, send health alert",
                  "tokens": [
                    "pollutant_type",
                    "level",
                    "health_risk"
                  ],
                  "smartLogic": "Different actions for different pollutants"
                },
                {
                  "id": "air_quality_critical",
                  "when": [
                    "dangerous_levels"
                  ],
                  "description": "Air quality dangerous",
                  "useCase": "Emergency ventilation, evacuate notification",
                  "tokens": [
                    "pollutant",
                    "level",
                    "safe_threshold"
                  ]
                },
                {
                  "id": "security_breach",
                  "when": [
                    "alarm_triggered",
                    "door_forced",
                    "tamper_detected"
                  ],
                  "description": "Critical security event requiring immediate action",
                  "useCase": "Send notifications, trigger sirens, call emergency contacts",
                  "tokens": [
                    "timestamp",
                    "location",
                    "severity"
                  ]
                },
                {
                  "id": "armed_state_changed",
                  "when": [
                    "armed",
                    "disarmed"
                  ],
                  "description": "Security system state changed",
                  "useCase": "Log events, adjust home mode, notify users",
                  "tokens": [
                    "previous_state",
                    "new_state",
                    "user"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "air_quality_good",
                  "logic": "All air quality metrics in healthy range",
                  "useCase": "Safe to close windows, turn off purifier"
                },
                {
                  "id": "is_armed",
                  "logic": "Check if security system is armed",
                  "useCase": "Prevent automation when armed"
                },
                {
                  "id": "recent_activity",
                  "logic": "Check if security event in last N minutes",
                  "useCase": "Avoid false alarms, rate limiting"
                }
              ],
              "actions": [
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "improve_air_quality",
                  "execute": "Activate all air quality improvement devices",
                  "useCase": "Purifiers, ventilation, humidifiers coordination"
                },
                {
                  "id": "emergency_protocol",
                  "execute": "Activate full security protocol",
                  "useCase": "Turn on all lights, lock all doors, trigger sirens, send alerts"
                }
              ]
            }
          },
          "capabilities": [
            "measure_temperature",
            "measure_humidity",
            "measure_battery"
          ],
          "class": "sensor"
        }
      ]
    },
    {
      "category": "energy",
      "count": 7,
      "config": {
        "patterns": [
          "power",
          "energy",
          "watt",
          "current",
          "voltage",
          "consumption"
        ],
        "context": "Energy monitoring & optimization",
        "priority": 80,
        "flows": {
          "triggers": [
            {
              "id": "high_consumption",
              "when": [
                "power_spike",
                "consumption_threshold"
              ],
              "description": "Abnormally high energy use",
              "useCase": "Alert for forgotten devices, detect malfunctions",
              "tokens": [
                "power_w",
                "baseline",
                "cost_impact"
              ]
            },
            {
              "id": "device_power_state",
              "when": [
                "device_powered_on",
                "standby_detected"
              ],
              "description": "Device power state changed",
              "useCase": "Track usage, detect vampires, automate shutoff",
              "tokens": [
                "state",
                "power_draw",
                "duration"
              ]
            },
            {
              "id": "daily_energy_report",
              "when": [
                "daily_threshold",
                "cost_exceeded"
              ],
              "description": "Daily energy summary",
              "useCase": "Cost tracking, usage patterns, savings tips",
              "tokens": [
                "total_kwh",
                "cost",
                "comparison_yesterday"
              ]
            },
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            }
          ],
          "conditions": [
            {
              "id": "consuming_power",
              "logic": "Device currently drawing power",
              "useCase": "Detect if device actually running"
            },
            {
              "id": "peak_hours",
              "logic": "Currently in peak rate period",
              "useCase": "Delay high-power tasks"
            },
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            }
          ],
          "actions": [
            {
              "id": "load_shedding",
              "execute": "Turn off non-essential devices during peak",
              "useCase": "Reduce costs, prevent overload"
            },
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "energy_plug_advanced_ac",
          "displayName": "energy plug advanced",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "power_meter_socket_ac",
          "displayName": "power meter socket",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_plug_energy_ac",
          "displayName": "smart plug energy",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_plug_power_meter_16a_ac",
          "displayName": "Smart Plug Power Meter 16a Ac",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "measure_voltage",
              "measure_current",
              "meter_power"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "measure_voltage",
            "measure_current",
            "meter_power"
          ],
          "class": "socket"
        },
        {
          "driver": "roller_shutter_switch_advanced_battery",
          "displayName": "Roller Shutter Switch Advanced (Battery)",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "windowcoverings_closed",
              "windowcoverings_set",
              "button.up",
              "button.down",
              "button.stop",
              "measure_power",
              "onoff",
              "dim",
              "windowcoverings_tilt_set",
              "measure_battery"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "windowcoverings_closed",
            "windowcoverings_set",
            "button.up",
            "button.down",
            "button.stop",
            "measure_power",
            "onoff",
            "dim",
            "windowcoverings_tilt_set",
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "energy_monitoring_plug_ac",
          "displayName": "Energy Monitoring Plug",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "energy_monitoring_plug_advanced_ac",
          "displayName": "Energy Plug Advanced",
          "intelligence": {
            "primary": "energy",
            "secondary": [
              "lighting"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Energy monitoring & optimization",
            "priority": 80,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                },
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                },
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                }
              ],
              "actions": [
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                },
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        }
      ]
    },
    {
      "category": "lighting",
      "count": 80,
      "config": {
        "patterns": [
          "light",
          "bulb",
          "lamp",
          "led",
          "strip",
          "dimmer"
        ],
        "context": "Lighting automation for ambiance & efficiency",
        "priority": 75,
        "flows": {
          "triggers": [
            {
              "id": "light_state_changed",
              "when": [
                "turned_on",
                "turned_off",
                "dimmed"
              ],
              "description": "Light state changed",
              "useCase": "Sync other lights, log usage, trigger scenes",
              "tokens": [
                "state",
                "brightness",
                "color"
              ]
            },
            {
              "id": "temperature_threshold",
              "when": [
                "temp_too_high",
                "temp_too_low"
              ],
              "description": "Temperature outside comfort zone",
              "useCase": "Activate HVAC, send alerts, adjust blinds",
              "tokens": [
                "current_temp",
                "threshold",
                "trend"
              ],
              "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
            },
            {
              "id": "humidity_alert",
              "when": [
                "humidity_too_high",
                "humidity_too_low"
              ],
              "description": "Humidity levels problematic",
              "useCase": "Activate dehumidifier, open windows, send mold warning",
              "tokens": [
                "current_humidity",
                "threshold",
                "mold_risk"
              ]
            },
            {
              "id": "perfect_conditions",
              "when": [
                "temp_and_humidity_optimal"
              ],
              "description": "Ideal climate conditions achieved",
              "useCase": "Log success, energy report, maintain settings",
              "tokens": [
                "temp",
                "humidity",
                "energy_used"
              ]
            },
            {
              "id": "safety_alarm",
              "when": [
                "smoke_detected",
                "gas_detected",
                "leak_detected"
              ],
              "description": "Life-safety alarm triggered",
              "useCase": "Emergency alert, shut off utilities, evacuate",
              "tokens": [
                "alarm_type",
                "severity",
                "location"
              ],
              "smartLogic": "Different protocols for smoke vs gas vs water"
            },
            {
              "id": "safety_test",
              "when": [
                "test_mode_activated"
              ],
              "description": "Safety device test",
              "useCase": "Log test, verify functionality, remind maintenance",
              "tokens": [
                "device",
                "last_test",
                "battery_level"
              ]
            },
            {
              "id": "presence_detected",
              "when": [
                "motion_detected",
                "occupancy_true"
              ],
              "description": "Someone entered the area",
              "useCase": "Turn on lights, adjust climate, log activity",
              "tokens": [
                "luminance",
                "temperature",
                "time_of_day"
              ],
              "smartLogic": "Different actions based on time (night vs day), luminance level"
            },
            {
              "id": "no_presence_timeout",
              "when": [
                "motion_cleared",
                "occupancy_false"
              ],
              "description": "Area vacant for configured duration",
              "useCase": "Turn off lights, reduce heating, activate security",
              "tokens": [
                "duration_vacant",
                "last_activity"
              ]
            },
            {
              "id": "unusual_activity",
              "when": [
                "motion_at_night",
                "unexpected_presence"
              ],
              "description": "Activity detected when not expected",
              "useCase": "Security alert, wake up notification",
              "tokens": [
                "expected_state",
                "actual_state"
              ]
            },
            {
              "id": "high_consumption",
              "when": [
                "power_spike",
                "consumption_threshold"
              ],
              "description": "Abnormally high energy use",
              "useCase": "Alert for forgotten devices, detect malfunctions",
              "tokens": [
                "power_w",
                "baseline",
                "cost_impact"
              ]
            },
            {
              "id": "device_power_state",
              "when": [
                "device_powered_on",
                "standby_detected"
              ],
              "description": "Device power state changed",
              "useCase": "Track usage, detect vampires, automate shutoff",
              "tokens": [
                "state",
                "power_draw",
                "duration"
              ]
            },
            {
              "id": "daily_energy_report",
              "when": [
                "daily_threshold",
                "cost_exceeded"
              ],
              "description": "Daily energy summary",
              "useCase": "Cost tracking, usage patterns, savings tips",
              "tokens": [
                "total_kwh",
                "cost",
                "comparison_yesterday"
              ]
            }
          ],
          "conditions": [
            {
              "id": "lights_on_in_room",
              "logic": "Any light on in specific room",
              "useCase": "Avoid turning on more lights"
            },
            {
              "id": "natural_light_sufficient",
              "logic": "Luminance sensor shows enough daylight",
              "useCase": "Skip turning on lights during day"
            },
            {
              "id": "temperature_in_range",
              "logic": "Temperature within comfort range",
              "useCase": "Skip HVAC activation if already comfortable"
            },
            {
              "id": "climate_stable",
              "logic": "Climate stable for N minutes",
              "useCase": "Avoid frequent HVAC cycling"
            },
            {
              "id": "any_safety_alarm",
              "logic": "Any safety sensor in alarm state",
              "useCase": "Block normal automation during emergency"
            },
            {
              "id": "anyone_home",
              "logic": "Check if any motion sensor detected presence recently",
              "useCase": "Home/Away mode detection"
            },
            {
              "id": "room_occupied",
              "logic": "Specific room currently occupied",
              "useCase": "Room-specific automations"
            },
            {
              "id": "consuming_power",
              "logic": "Device currently drawing power",
              "useCase": "Detect if device actually running"
            },
            {
              "id": "peak_hours",
              "logic": "Currently in peak rate period",
              "useCase": "Delay high-power tasks"
            }
          ],
          "actions": [
            {
              "id": "adaptive_scene",
              "execute": "Set scene based on time, activity, presence",
              "useCase": "Morning bright, evening warm, night dim"
            },
            {
              "id": "circadian_rhythm",
              "execute": "Adjust color temperature to match sun",
              "useCase": "Support natural wake/sleep cycle"
            },
            {
              "id": "all_lights_control",
              "execute": "Master control for all lights",
              "useCase": "One-touch all on/off, panic mode"
            },
            {
              "id": "smart_climate_control",
              "execute": "Optimize temperature based on occupancy, time, weather",
              "useCase": "Maximum comfort with minimal energy"
            },
            {
              "id": "ventilation_strategy",
              "execute": "Open/close windows based on inside vs outside conditions",
              "useCase": "Natural climate control when beneficial"
            },
            {
              "id": "emergency_shutdown",
              "execute": "Shut off gas, water, HVAC based on alarm type",
              "useCase": "Prevent further damage/danger"
            },
            {
              "id": "evacuation_protocol",
              "execute": "Unlock doors, turn on path lights, alert emergency contacts",
              "useCase": "Safe evacuation assistance"
            },
            {
              "id": "adaptive_lighting",
              "execute": "Adjust lights based on presence + luminance + time",
              "useCase": "Smart lighting that adapts to context"
            },
            {
              "id": "presence_based_climate",
              "execute": "Adjust temperature based on occupancy",
              "useCase": "Energy saving while maintaining comfort"
            },
            {
              "id": "load_shedding",
              "execute": "Turn off non-essential devices during peak",
              "useCase": "Reduce costs, prevent overload"
            }
          ]
        }
      },
      "drivers": [
        {
          "driver": "multisensor_battery",
          "displayName": "Multisensor (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "soil_moisture_sensor_battery",
          "displayName": "Soil Moisture Sensor (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "vibration_sensor_battery",
          "displayName": "Vibration Sensor (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "climate",
              "presence"
            ],
            "capabilities": [
              "onoff",
              "measure_battery",
              "measure_temperature",
              "alarm_motion",
              "measure_luminance"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "measure_temperature",
            "alarm_motion",
            "measure_luminance"
          ],
          "class": "sensor"
        },
        {
          "driver": "bulb_color_rgbcct_ac",
          "displayName": "Color & White Bulb",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature",
              "light_mode"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature",
            "light_mode"
          ],
          "class": "light"
        },
        {
          "driver": "ceiling_light_rgb_ac",
          "displayName": "ceiling light rgb",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "light"
        },
        {
          "driver": "led_strip_controller_pro_ac",
          "displayName": "led strip controller pro",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "safety",
              "climate"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "sensor"
        },
        {
          "driver": "milight_controller_ac",
          "displayName": "Mi-Light Controller",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature",
              "light_mode"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature",
            "light_mode"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_bulb_dimmer_ac",
          "displayName": "smart bulb dimmer",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "climate"
            ],
            "capabilities": [
              "onoff",
              "measure_temperature",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_temperature",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "light"
        },
        {
          "driver": "ceiling_light_controller_ac",
          "displayName": "Ceiling Light Controller",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "sensor"
        },
        {
          "driver": "led_strip_advanced_ac",
          "displayName": "LED Strip Advanced",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "light"
        },
        {
          "driver": "led_strip_controller_ac",
          "displayName": "LED Strip Controller",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "sensor"
        },
        {
          "driver": "rgb_led_controller_ac",
          "displayName": "RGB LED Controller",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "safety"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_bulb_rgb_ac",
          "displayName": "Color Bulb (RGB)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim",
              "light_temperature",
              "light_hue",
              "light_saturation"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_temperature",
            "light_hue",
            "light_saturation"
          ],
          "class": "light"
        },
        {
          "driver": "smart_bulb_tunable_ac",
          "displayName": "Smart Bulb Tunable",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim",
              "light_temperature",
              "light_hue",
              "light_saturation"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_temperature",
            "light_hue",
            "light_saturation"
          ],
          "class": "light"
        },
        {
          "driver": "smart_bulb_white_ac",
          "displayName": "Smart Bulb White",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim",
              "light_hue",
              "light_saturation",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_hue",
            "light_saturation",
            "light_temperature"
          ],
          "class": "light"
        },
        {
          "driver": "bulb_white_ambiance_ac",
          "displayName": "Bulb White Ambiance Ac",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim",
              "light_temperature"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "light_temperature"
          ],
          "class": "light"
        },
        {
          "driver": "bulb_white_ac",
          "displayName": "Bulb White Ac",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "radiator_valve_hybrid",
          "displayName": "Radiator Valve",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "measure_battery",
              "onoff"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_battery",
            "onoff"
          ],
          "class": "other"
        },
        {
          "driver": "ceiling_fan_ac",
          "displayName": "Ceiling Fan",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "roller_shutter_switch_cr2032",
          "displayName": "Roller Shutter Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "windowcoverings_closed",
              "windowcoverings_set",
              "button.up",
              "button.down",
              "button.stop",
              "onoff",
              "dim",
              "windowcoverings_tilt_set",
              "measure_battery"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "windowcoverings_closed",
            "windowcoverings_set",
            "button.up",
            "button.down",
            "button.stop",
            "onoff",
            "dim",
            "windowcoverings_tilt_set",
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "switch_5gang_battery",
          "displayName": "Switch 5-Gang Battery CR2450 (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "button.1",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "measure_battery",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "button.1",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "measure_battery",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_6gang_cr2032",
          "displayName": "6-Button Remote",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "button.6",
              "measure_battery",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "button.6",
            "measure_battery",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "switch_4gang_battery_cr2032",
          "displayName": "Switch 4-Gang Remote (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "button.1",
              "button.2",
              "button.3",
              "button.4",
              "measure_battery",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "button.1",
            "button.2",
            "button.3",
            "button.4",
            "measure_battery",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_4gang_cr2450",
          "displayName": "4-Button Remote",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "button.1",
              "button.2",
              "button.3",
              "button.4",
              "measure_battery",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "button.1",
            "button.2",
            "button.3",
            "button.4",
            "measure_battery",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_5gang_cr2032",
          "displayName": "5-Button Remote",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "measure_battery",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "measure_battery",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "curtain_motor_ac",
          "displayName": "Curtain Motor (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "windowcoverings_set",
              "windowcoverings_tilt_set",
              "measure_battery"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "windowcoverings_set",
            "windowcoverings_tilt_set",
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "switch_1gang_battery",
          "displayName": "Switch 1-Gang Battery CR2032 (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "button.1",
              "measure_battery",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "button.1",
            "measure_battery",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "switch_3gang_battery",
          "displayName": "Switch 3-Gang Battery CR2450 (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3",
              "measure_battery"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3",
            "measure_battery"
          ],
          "class": "socket"
        },
        {
          "driver": "switch_8gang_ac",
          "displayName": "Switch 8-Gang AC Power",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "button.6",
              "button.7",
              "button.8",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "button.6",
            "button.7",
            "button.8",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_3gang_cr2032",
          "displayName": "3-Button Wireless Scene Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3",
              "measure_battery"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3",
            "measure_battery"
          ],
          "class": "socket"
        },
        {
          "driver": "mini_switch_cr2032",
          "displayName": "Mini Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "measure_battery",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "dim"
          ],
          "class": "sensor"
        },
        {
          "driver": "remote_switch_cr2032",
          "displayName": "Remote Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "measure_battery",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "dim"
          ],
          "class": "button"
        },
        {
          "driver": "wireless_switch_1gang_cr2032",
          "displayName": "1-Button Wireless Scene Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "measure_battery",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_battery",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_2gang_cr2032",
          "displayName": "2-Button Wireless Scene Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "measure_battery"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "measure_battery"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_4gang_cr2032",
          "displayName": "4-Button Wireless Scene Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "measure_battery",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_switch_cr2032",
          "displayName": "Wireless Switch (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "measure_battery",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_battery",
            "dim"
          ],
          "class": "button"
        },
        {
          "driver": "switch_6gang_ac",
          "displayName": "Switch 6-Gang AC Power",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "button.6",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "button.6",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_6gang_ac",
          "displayName": "6-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "button.6",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "button.6",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "touch_switch_4gang_ac",
          "displayName": "4-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "button.1",
              "button.2",
              "button.3",
              "button.4",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "button.1",
            "button.2",
            "button.3",
            "button.4",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_5gang_ac",
          "displayName": "5-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "button.5",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "button.5",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wireless_dimmer_scroll_battery",
          "displayName": "Wireless Dimmer Scroll Battery (Battery)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "measure_battery"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "measure_battery"
          ],
          "class": "other"
        },
        {
          "driver": "extension_plug_ac",
          "displayName": "Extension Plug",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_outlet_monitor_ac",
          "displayName": "smart outlet monitor",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_plug_ac",
          "displayName": "Smart Plug",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_switch_4gang_hybrid",
          "displayName": "4-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "switch_4gang_ac",
          "displayName": "Switch 4-Gang AC Power",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "usb_outlet_ac",
          "displayName": "USB Outlet",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "usb_outlet_advanced_ac",
          "displayName": "USB Outlet Advanced",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "meter_power",
              "measure_voltage",
              "measure_current"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "meter_power",
            "measure_voltage",
            "measure_current"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_4gang_ac",
          "displayName": "4-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_4gang_dc",
          "displayName": "4-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "button.2",
              "button.3",
              "button.4",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "button.2",
            "button.3",
            "button.4",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_dimmer_module_1gang_ac",
          "displayName": "Smart Dimmer Module 1 Gang",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "measure_power",
              "meter_power"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "measure_power",
            "meter_power"
          ],
          "class": "light"
        },
        {
          "driver": "smart_plug_dimmer_ac",
          "displayName": "Smart Plug with Dimmer (AC)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "dim",
              "measure_power",
              "meter_power"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim",
            "measure_power",
            "meter_power"
          ],
          "class": "socket"
        },
        {
          "driver": "dimmer_switch_3gang_ac",
          "displayName": "Dimmer Switch 3-Gang AC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3"
          ],
          "class": "socket"
        },
        {
          "driver": "relay_switch_1gang_ac",
          "displayName": "Relay Switch 1-Gang AC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [
              "energy"
            ],
            "capabilities": [
              "onoff",
              "measure_power",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_power",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_switch_3gang_ac",
          "displayName": "3-Gang Wall Switch (AC)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_switch_3gang_hybrid",
          "displayName": "3-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3"
          ],
          "class": "socket"
        },
        {
          "driver": "touch_switch_1gang_ac",
          "displayName": "1-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "button.1",
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "button.1",
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "touch_switch_3gang_ac",
          "displayName": "3-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_3gang_ac",
          "displayName": "Wall Switch 3-Gang AC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_3gang_dc",
          "displayName": "3-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2",
              "onoff.gang3"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2",
            "onoff.gang3"
          ],
          "class": "socket"
        },
        {
          "driver": "dimmer_ac",
          "displayName": "Dimmer Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "dimmer_switch_1gang_ac",
          "displayName": "Dimmer Switch 1-Gang AC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "dimmer_switch_timer_module_ac",
          "displayName": "Dimmer Switch Timer Module",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "mini_ac",
          "displayName": "Mini Switch AC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "sensor"
        },
        {
          "driver": "smart_spot_ac",
          "displayName": "Smart Spot",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "smart_switch_1gang_ac",
          "displayName": "1-Gang Wall Switch (AC)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_switch_1gang_hybrid",
          "displayName": "1-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_switch_2gang_ac",
          "displayName": "2-Gang Wall Switch (AC)",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "smart_switch_2gang_hybrid",
          "displayName": "2-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "switch_2gang_ac",
          "displayName": "Switch 2-Gang AC Power",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "switch_2gang_hybrid",
          "displayName": "Switch 2-Gang Hybrid AC/DC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "touch_dimmer_1gang_ac",
          "displayName": "Touch Dimmer 1-Gang",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "touch_dimmer_ac",
          "displayName": "Touch Dimmer",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "light"
        },
        {
          "driver": "touch_switch_2gang_ac",
          "displayName": "2-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_1gang_ac",
          "displayName": "1-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_1gang_dc",
          "displayName": "1-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "dim"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "dim"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_2gang_ac",
          "displayName": "2-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "wall_switch_2gang_dc",
          "displayName": "2-Gang Wall Switch",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "onoff.gang2"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "onoff.gang2"
          ],
          "class": "socket"
        },
        {
          "driver": "zigbee_gateway_hub_ac",
          "displayName": "Zigbee Gateway Hub",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff",
              "measure_signal_strength"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff",
            "measure_signal_strength"
          ],
          "class": "sensor"
        },
        {
          "driver": "zbbridge_ac",
          "displayName": "Zigbee Bridge Hub AC",
          "intelligence": {
            "primary": "lighting",
            "secondary": [],
            "capabilities": [
              "onoff"
            ],
            "context": "Lighting automation for ambiance & efficiency",
            "priority": 75,
            "useCases": [],
            "smartFlows": {
              "triggers": [
                {
                  "id": "light_state_changed",
                  "when": [
                    "turned_on",
                    "turned_off",
                    "dimmed"
                  ],
                  "description": "Light state changed",
                  "useCase": "Sync other lights, log usage, trigger scenes",
                  "tokens": [
                    "state",
                    "brightness",
                    "color"
                  ]
                },
                {
                  "id": "temperature_threshold",
                  "when": [
                    "temp_too_high",
                    "temp_too_low"
                  ],
                  "description": "Temperature outside comfort zone",
                  "useCase": "Activate HVAC, send alerts, adjust blinds",
                  "tokens": [
                    "current_temp",
                    "threshold",
                    "trend"
                  ],
                  "smartLogic": "Consider outdoor temp, time of day, occupancy for optimal action"
                },
                {
                  "id": "humidity_alert",
                  "when": [
                    "humidity_too_high",
                    "humidity_too_low"
                  ],
                  "description": "Humidity levels problematic",
                  "useCase": "Activate dehumidifier, open windows, send mold warning",
                  "tokens": [
                    "current_humidity",
                    "threshold",
                    "mold_risk"
                  ]
                },
                {
                  "id": "perfect_conditions",
                  "when": [
                    "temp_and_humidity_optimal"
                  ],
                  "description": "Ideal climate conditions achieved",
                  "useCase": "Log success, energy report, maintain settings",
                  "tokens": [
                    "temp",
                    "humidity",
                    "energy_used"
                  ]
                },
                {
                  "id": "safety_alarm",
                  "when": [
                    "smoke_detected",
                    "gas_detected",
                    "leak_detected"
                  ],
                  "description": "Life-safety alarm triggered",
                  "useCase": "Emergency alert, shut off utilities, evacuate",
                  "tokens": [
                    "alarm_type",
                    "severity",
                    "location"
                  ],
                  "smartLogic": "Different protocols for smoke vs gas vs water"
                },
                {
                  "id": "safety_test",
                  "when": [
                    "test_mode_activated"
                  ],
                  "description": "Safety device test",
                  "useCase": "Log test, verify functionality, remind maintenance",
                  "tokens": [
                    "device",
                    "last_test",
                    "battery_level"
                  ]
                },
                {
                  "id": "presence_detected",
                  "when": [
                    "motion_detected",
                    "occupancy_true"
                  ],
                  "description": "Someone entered the area",
                  "useCase": "Turn on lights, adjust climate, log activity",
                  "tokens": [
                    "luminance",
                    "temperature",
                    "time_of_day"
                  ],
                  "smartLogic": "Different actions based on time (night vs day), luminance level"
                },
                {
                  "id": "no_presence_timeout",
                  "when": [
                    "motion_cleared",
                    "occupancy_false"
                  ],
                  "description": "Area vacant for configured duration",
                  "useCase": "Turn off lights, reduce heating, activate security",
                  "tokens": [
                    "duration_vacant",
                    "last_activity"
                  ]
                },
                {
                  "id": "unusual_activity",
                  "when": [
                    "motion_at_night",
                    "unexpected_presence"
                  ],
                  "description": "Activity detected when not expected",
                  "useCase": "Security alert, wake up notification",
                  "tokens": [
                    "expected_state",
                    "actual_state"
                  ]
                },
                {
                  "id": "high_consumption",
                  "when": [
                    "power_spike",
                    "consumption_threshold"
                  ],
                  "description": "Abnormally high energy use",
                  "useCase": "Alert for forgotten devices, detect malfunctions",
                  "tokens": [
                    "power_w",
                    "baseline",
                    "cost_impact"
                  ]
                },
                {
                  "id": "device_power_state",
                  "when": [
                    "device_powered_on",
                    "standby_detected"
                  ],
                  "description": "Device power state changed",
                  "useCase": "Track usage, detect vampires, automate shutoff",
                  "tokens": [
                    "state",
                    "power_draw",
                    "duration"
                  ]
                },
                {
                  "id": "daily_energy_report",
                  "when": [
                    "daily_threshold",
                    "cost_exceeded"
                  ],
                  "description": "Daily energy summary",
                  "useCase": "Cost tracking, usage patterns, savings tips",
                  "tokens": [
                    "total_kwh",
                    "cost",
                    "comparison_yesterday"
                  ]
                }
              ],
              "conditions": [
                {
                  "id": "lights_on_in_room",
                  "logic": "Any light on in specific room",
                  "useCase": "Avoid turning on more lights"
                },
                {
                  "id": "natural_light_sufficient",
                  "logic": "Luminance sensor shows enough daylight",
                  "useCase": "Skip turning on lights during day"
                },
                {
                  "id": "temperature_in_range",
                  "logic": "Temperature within comfort range",
                  "useCase": "Skip HVAC activation if already comfortable"
                },
                {
                  "id": "climate_stable",
                  "logic": "Climate stable for N minutes",
                  "useCase": "Avoid frequent HVAC cycling"
                },
                {
                  "id": "any_safety_alarm",
                  "logic": "Any safety sensor in alarm state",
                  "useCase": "Block normal automation during emergency"
                },
                {
                  "id": "anyone_home",
                  "logic": "Check if any motion sensor detected presence recently",
                  "useCase": "Home/Away mode detection"
                },
                {
                  "id": "room_occupied",
                  "logic": "Specific room currently occupied",
                  "useCase": "Room-specific automations"
                },
                {
                  "id": "consuming_power",
                  "logic": "Device currently drawing power",
                  "useCase": "Detect if device actually running"
                },
                {
                  "id": "peak_hours",
                  "logic": "Currently in peak rate period",
                  "useCase": "Delay high-power tasks"
                }
              ],
              "actions": [
                {
                  "id": "adaptive_scene",
                  "execute": "Set scene based on time, activity, presence",
                  "useCase": "Morning bright, evening warm, night dim"
                },
                {
                  "id": "circadian_rhythm",
                  "execute": "Adjust color temperature to match sun",
                  "useCase": "Support natural wake/sleep cycle"
                },
                {
                  "id": "all_lights_control",
                  "execute": "Master control for all lights",
                  "useCase": "One-touch all on/off, panic mode"
                },
                {
                  "id": "smart_climate_control",
                  "execute": "Optimize temperature based on occupancy, time, weather",
                  "useCase": "Maximum comfort with minimal energy"
                },
                {
                  "id": "ventilation_strategy",
                  "execute": "Open/close windows based on inside vs outside conditions",
                  "useCase": "Natural climate control when beneficial"
                },
                {
                  "id": "emergency_shutdown",
                  "execute": "Shut off gas, water, HVAC based on alarm type",
                  "useCase": "Prevent further damage/danger"
                },
                {
                  "id": "evacuation_protocol",
                  "execute": "Unlock doors, turn on path lights, alert emergency contacts",
                  "useCase": "Safe evacuation assistance"
                },
                {
                  "id": "adaptive_lighting",
                  "execute": "Adjust lights based on presence + luminance + time",
                  "useCase": "Smart lighting that adapts to context"
                },
                {
                  "id": "presence_based_climate",
                  "execute": "Adjust temperature based on occupancy",
                  "useCase": "Energy saving while maintaining comfort"
                },
                {
                  "id": "load_shedding",
                  "execute": "Turn off non-essential devices during peak",
                  "useCase": "Reduce costs, prevent overload"
                }
              ]
            }
          },
          "capabilities": [
            "onoff"
          ],
          "class": "sensor"
        }
      ]
    }
  ],
  "timestamp": "2025-10-13T20:47:22.726Z"
}